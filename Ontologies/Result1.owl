<?xml version="1.0"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
         xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
         xmlns:owl="http://www.w3.org/2002/07/owl#"
         xml:base="http://www.semanticweb.org/sinitza/ontologies/2023/3/PythonLanguage"
         xmlns="http://www.semanticweb.org/sinitza/ontologies/2023/3/PythonLanguage#">

<owl:Ontology rdf:about="http://www.semanticweb.org/sinitza/ontologies/2023/3/PythonLanguage">
  <owl:versionIRI rdf:resource="http://www.semanticweb.org/sinitza/ontologies/2023/3/PythonLanguage/0.1"/>
  <rdfs:comment>Language Ontology</rdfs:comment>
</owl:Ontology>

<owl:DatatypeProperty rdf:about="#SpecText">
  <rdfs:subPropertyOf rdf:resource="#has_SpecText"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#has_SpecText">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
</owl:DatatypeProperty>

<owl:Class rdf:about="#Built_in_Types">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#Compound_statements">
  <rdfs:subClassOf rdf:resource="#Language_Reference"/>
</owl:Class>

<owl:Class rdf:about="#Language_Reference">
  <rdfs:subClassOf rdf:resource="#Ontology_Root"/>
</owl:Class>

<owl:Class rdf:about="#Ontology_Root"/>

<owl:Class rdf:about="#Simple_statements">
  <rdfs:subClassOf rdf:resource="#Language_Reference"/>
</owl:Class>

<owl:Class rdf:about="#Standart_Library">
  <rdfs:subClassOf rdf:resource="#Ontology_Root"/>
</owl:Class>

<owl:Class rdf:about="#assert">
  <rdfs:subClassOf rdf:resource="#Simple_statements"/>
</owl:Class>

<owl:Class rdf:about="#break">
  <rdfs:subClassOf rdf:resource="#Simple_statements"/>
</owl:Class>

<owl:Class rdf:about="#continue">
  <rdfs:subClassOf rdf:resource="#Simple_statements"/>
</owl:Class>

<owl:Class rdf:about="#del">
  <rdfs:subClassOf rdf:resource="#Simple_statements"/>
</owl:Class>

<owl:Class rdf:about="#for">
  <rdfs:subClassOf rdf:resource="#Compound_statements"/>
</owl:Class>

<owl:Class rdf:about="#global">
  <rdfs:subClassOf rdf:resource="#Simple_statements"/>
</owl:Class>

<owl:Class rdf:about="#if">
  <rdfs:subClassOf rdf:resource="#Compound_statements"/>
</owl:Class>

<owl:Class rdf:about="#import">
  <rdfs:subClassOf rdf:resource="#Simple_statements"/>
</owl:Class>

<owl:Class rdf:about="#match">
  <rdfs:subClassOf rdf:resource="#Compound_statements"/>
</owl:Class>

<owl:Class rdf:about="#nonlocal">
  <rdfs:subClassOf rdf:resource="#Simple_statements"/>
</owl:Class>

<owl:Class rdf:about="#pass">
  <rdfs:subClassOf rdf:resource="#Simple_statements"/>
</owl:Class>

<owl:Class rdf:about="#raise">
  <rdfs:subClassOf rdf:resource="#Simple_statements"/>
</owl:Class>

<owl:Class rdf:about="#return">
  <rdfs:subClassOf rdf:resource="#Simple_statements"/>
</owl:Class>

<owl:Class rdf:about="#try">
  <rdfs:subClassOf rdf:resource="#Compound_statements"/>
</owl:Class>

<owl:Class rdf:about="#while">
  <rdfs:subClassOf rdf:resource="#Compound_statements"/>
</owl:Class>

<owl:Class rdf:about="#with">
  <rdfs:subClassOf rdf:resource="#Compound_statements"/>
</owl:Class>

<owl:Class rdf:about="#yield">
  <rdfs:subClassOf rdf:resource="#Simple_statements"/>
</owl:Class>

<owl:Class rdf:about="#Text_Processing_Services">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#string">
  <rdfs:subClassOf rdf:resource="#Text_Processing_Services"/>
</owl:Class>

<owl:Class rdf:about="#re">
  <rdfs:subClassOf rdf:resource="#Text_Processing_Services"/>
</owl:Class>

<owl:Class rdf:about="#difflib">
  <rdfs:subClassOf rdf:resource="#Text_Processing_Services"/>
</owl:Class>

<owl:Class rdf:about="#textwrap">
  <rdfs:subClassOf rdf:resource="#Text_Processing_Services"/>
</owl:Class>

<owl:Class rdf:about="#unicodedata">
  <rdfs:subClassOf rdf:resource="#Text_Processing_Services"/>
</owl:Class>

<owl:Class rdf:about="#stringprep">
  <rdfs:subClassOf rdf:resource="#Text_Processing_Services"/>
</owl:Class>

<owl:Class rdf:about="#readline">
  <rdfs:subClassOf rdf:resource="#Text_Processing_Services"/>
</owl:Class>

<owl:Class rdf:about="#rlcompleter">
  <rdfs:subClassOf rdf:resource="#Text_Processing_Services"/>
</owl:Class>

<owl:Class rdf:about="#Binary_Data_Services">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#struct">
  <rdfs:subClassOf rdf:resource="#Binary_Data_Services"/>
</owl:Class>

<owl:Class rdf:about="#codecs">
  <rdfs:subClassOf rdf:resource="#Binary_Data_Services"/>
</owl:Class>

<owl:Class rdf:about="#Data_Types">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#datetime">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#zoneinfo">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#calendar">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#collections">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#collectionsabc">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#heapq">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#bisect">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#array">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#weakref">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#types">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#copy">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#pprint">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#reprlib">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#enum">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#graphlib">
  <rdfs:subClassOf rdf:resource="#Data_Types"/>
</owl:Class>

<owl:Class rdf:about="#Numeric_and_Mathematical_Modules">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#numbers">
  <rdfs:subClassOf rdf:resource="#Numeric_and_Mathematical_Modules"/>
</owl:Class>

<owl:Class rdf:about="#math">
  <rdfs:subClassOf rdf:resource="#Numeric_and_Mathematical_Modules"/>
</owl:Class>

<owl:Class rdf:about="#cmath">
  <rdfs:subClassOf rdf:resource="#Numeric_and_Mathematical_Modules"/>
</owl:Class>

<owl:Class rdf:about="#decimal">
  <rdfs:subClassOf rdf:resource="#Numeric_and_Mathematical_Modules"/>
</owl:Class>

<owl:Class rdf:about="#fractions">
  <rdfs:subClassOf rdf:resource="#Numeric_and_Mathematical_Modules"/>
</owl:Class>

<owl:Class rdf:about="#random">
  <rdfs:subClassOf rdf:resource="#Numeric_and_Mathematical_Modules"/>
</owl:Class>

<owl:Class rdf:about="#statistics">
  <rdfs:subClassOf rdf:resource="#Numeric_and_Mathematical_Modules"/>
</owl:Class>

<owl:Class rdf:about="#Functional_Programming_Modules">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#itertools">
  <rdfs:subClassOf rdf:resource="#Functional_Programming_Modules"/>
</owl:Class>

<owl:Class rdf:about="#functools">
  <rdfs:subClassOf rdf:resource="#Functional_Programming_Modules"/>
</owl:Class>

<owl:Class rdf:about="#operator">
  <rdfs:subClassOf rdf:resource="#Functional_Programming_Modules"/>
</owl:Class>

<owl:Class rdf:about="#File_and_Directory_Access">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#pathlib">
  <rdfs:subClassOf rdf:resource="#File_and_Directory_Access"/>
</owl:Class>

<owl:Class rdf:about="#ospath">
  <rdfs:subClassOf rdf:resource="#File_and_Directory_Access"/>
</owl:Class>

<owl:Class rdf:about="#fileinput">
  <rdfs:subClassOf rdf:resource="#File_and_Directory_Access"/>
</owl:Class>

<owl:Class rdf:about="#stat">
  <rdfs:subClassOf rdf:resource="#File_and_Directory_Access"/>
</owl:Class>

<owl:Class rdf:about="#filecmp">
  <rdfs:subClassOf rdf:resource="#File_and_Directory_Access"/>
</owl:Class>

<owl:Class rdf:about="#tempfile">
  <rdfs:subClassOf rdf:resource="#File_and_Directory_Access"/>
</owl:Class>

<owl:Class rdf:about="#glob">
  <rdfs:subClassOf rdf:resource="#File_and_Directory_Access"/>
</owl:Class>

<owl:Class rdf:about="#fnmatch">
  <rdfs:subClassOf rdf:resource="#File_and_Directory_Access"/>
</owl:Class>

<owl:Class rdf:about="#linecache">
  <rdfs:subClassOf rdf:resource="#File_and_Directory_Access"/>
</owl:Class>

<owl:Class rdf:about="#shutil">
  <rdfs:subClassOf rdf:resource="#File_and_Directory_Access"/>
</owl:Class>

<owl:Class rdf:about="#Data_Persistence">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#pickle">
  <rdfs:subClassOf rdf:resource="#Data_Persistence"/>
</owl:Class>

<owl:Class rdf:about="#copyreg">
  <rdfs:subClassOf rdf:resource="#Data_Persistence"/>
</owl:Class>

<owl:Class rdf:about="#shelve">
  <rdfs:subClassOf rdf:resource="#Data_Persistence"/>
</owl:Class>

<owl:Class rdf:about="#marshal">
  <rdfs:subClassOf rdf:resource="#Data_Persistence"/>
</owl:Class>

<owl:Class rdf:about="#dbm">
  <rdfs:subClassOf rdf:resource="#Data_Persistence"/>
</owl:Class>

<owl:Class rdf:about="#sqlite3">
  <rdfs:subClassOf rdf:resource="#Data_Persistence"/>
</owl:Class>

<owl:Class rdf:about="#Data_Compression_and_Archiving">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#zlib">
  <rdfs:subClassOf rdf:resource="#Data_Compression_and_Archiving"/>
</owl:Class>

<owl:Class rdf:about="#gzip">
  <rdfs:subClassOf rdf:resource="#Data_Compression_and_Archiving"/>
</owl:Class>

<owl:Class rdf:about="#bz2">
  <rdfs:subClassOf rdf:resource="#Data_Compression_and_Archiving"/>
</owl:Class>

<owl:Class rdf:about="#lzma">
  <rdfs:subClassOf rdf:resource="#Data_Compression_and_Archiving"/>
</owl:Class>

<owl:Class rdf:about="#zipfile">
  <rdfs:subClassOf rdf:resource="#Data_Compression_and_Archiving"/>
</owl:Class>

<owl:Class rdf:about="#tarfile">
  <rdfs:subClassOf rdf:resource="#Data_Compression_and_Archiving"/>
</owl:Class>

<owl:Class rdf:about="#File_Formats">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#csv">
  <rdfs:subClassOf rdf:resource="#File_Formats"/>
</owl:Class>

<owl:Class rdf:about="#configparser">
  <rdfs:subClassOf rdf:resource="#File_Formats"/>
</owl:Class>

<owl:Class rdf:about="#tomllib">
  <rdfs:subClassOf rdf:resource="#File_Formats"/>
</owl:Class>

<owl:Class rdf:about="#netrc">
  <rdfs:subClassOf rdf:resource="#File_Formats"/>
</owl:Class>

<owl:Class rdf:about="#plistlib">
  <rdfs:subClassOf rdf:resource="#File_Formats"/>
</owl:Class>

<owl:Class rdf:about="#Cryptographic_Services">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#hashlib">
  <rdfs:subClassOf rdf:resource="#Cryptographic_Services"/>
</owl:Class>

<owl:Class rdf:about="#hmac">
  <rdfs:subClassOf rdf:resource="#Cryptographic_Services"/>
</owl:Class>

<owl:Class rdf:about="#secrets">
  <rdfs:subClassOf rdf:resource="#Cryptographic_Services"/>
</owl:Class>

<owl:Class rdf:about="#Generic_Operating_System_Services">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#os">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#io">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#time">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#argparse">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#getopt">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#logging">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#loggingconfig">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#logginghandlers">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#getpass">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#curses">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#cursestextpad">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#cursesascii">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#cursespanel">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#platform">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#errno">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#ctypes">
  <rdfs:subClassOf rdf:resource="#Generic_Operating_System_Services"/>
</owl:Class>

<owl:Class rdf:about="#Concurrent_Execution">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#threading">
  <rdfs:subClassOf rdf:resource="#Concurrent_Execution"/>
</owl:Class>

<owl:Class rdf:about="#multiprocessing">
  <rdfs:subClassOf rdf:resource="#Concurrent_Execution"/>
</owl:Class>

<owl:Class rdf:about="#multiprocessingshared_memory">
  <rdfs:subClassOf rdf:resource="#Concurrent_Execution"/>
</owl:Class>

<owl:Class rdf:about="#The_concurrent_packag">
  <rdfs:subClassOf rdf:resource="#Concurrent_Execution"/>
</owl:Class>

<owl:Class rdf:about="#concurrentfutures">
  <rdfs:subClassOf rdf:resource="#Concurrent_Execution"/>
</owl:Class>

<owl:Class rdf:about="#subprocess">
  <rdfs:subClassOf rdf:resource="#Concurrent_Execution"/>
</owl:Class>

<owl:Class rdf:about="#sched">
  <rdfs:subClassOf rdf:resource="#Concurrent_Execution"/>
</owl:Class>

<owl:Class rdf:about="#queue">
  <rdfs:subClassOf rdf:resource="#Concurrent_Execution"/>
</owl:Class>

<owl:Class rdf:about="#contextvars">
  <rdfs:subClassOf rdf:resource="#Concurrent_Execution"/>
</owl:Class>

<owl:Class rdf:about="#_thread">
  <rdfs:subClassOf rdf:resource="#Concurrent_Execution"/>
</owl:Class>

<owl:Class rdf:about="#Networking_and_Interprocess_Communication">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#asyncio">
  <rdfs:subClassOf rdf:resource="#Networking_and_Interprocess_Communication"/>
</owl:Class>

<owl:Class rdf:about="#socket">
  <rdfs:subClassOf rdf:resource="#Networking_and_Interprocess_Communication"/>
</owl:Class>

<owl:Class rdf:about="#ssl">
  <rdfs:subClassOf rdf:resource="#Networking_and_Interprocess_Communication"/>
</owl:Class>

<owl:Class rdf:about="#select">
  <rdfs:subClassOf rdf:resource="#Networking_and_Interprocess_Communication"/>
</owl:Class>

<owl:Class rdf:about="#selectors">
  <rdfs:subClassOf rdf:resource="#Networking_and_Interprocess_Communication"/>
</owl:Class>

<owl:Class rdf:about="#signal">
  <rdfs:subClassOf rdf:resource="#Networking_and_Interprocess_Communication"/>
</owl:Class>

<owl:Class rdf:about="#mmap">
  <rdfs:subClassOf rdf:resource="#Networking_and_Interprocess_Communication"/>
</owl:Class>

<owl:Class rdf:about="#Internet_Data_Handling">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#email">
  <rdfs:subClassOf rdf:resource="#Internet_Data_Handling"/>
</owl:Class>

<owl:Class rdf:about="#json">
  <rdfs:subClassOf rdf:resource="#Internet_Data_Handling"/>
</owl:Class>

<owl:Class rdf:about="#mailbox">
  <rdfs:subClassOf rdf:resource="#Internet_Data_Handling"/>
</owl:Class>

<owl:Class rdf:about="#mimetypes">
  <rdfs:subClassOf rdf:resource="#Internet_Data_Handling"/>
</owl:Class>

<owl:Class rdf:about="#base64">
  <rdfs:subClassOf rdf:resource="#Internet_Data_Handling"/>
</owl:Class>

<owl:Class rdf:about="#binascii">
  <rdfs:subClassOf rdf:resource="#Internet_Data_Handling"/>
</owl:Class>

<owl:Class rdf:about="#quopri">
  <rdfs:subClassOf rdf:resource="#Internet_Data_Handling"/>
</owl:Class>

<owl:Class rdf:about="#Structured_Markup_Processing_Tools">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#html">
  <rdfs:subClassOf rdf:resource="#Structured_Markup_Processing_Tools"/>
</owl:Class>

<owl:Class rdf:about="#htmlparser">
  <rdfs:subClassOf rdf:resource="#Structured_Markup_Processing_Tools"/>
</owl:Class>

<owl:Class rdf:about="#htmlentities">
  <rdfs:subClassOf rdf:resource="#Structured_Markup_Processing_Tools"/>
</owl:Class>

<owl:Class rdf:about="#XML_Processing_Module">
  <rdfs:subClassOf rdf:resource="#Structured_Markup_Processing_Tools"/>
</owl:Class>

<owl:Class rdf:about="#xmletreeElementTree">
  <rdfs:subClassOf rdf:resource="#Structured_Markup_Processing_Tools"/>
</owl:Class>

<owl:Class rdf:about="#xmldom">
  <rdfs:subClassOf rdf:resource="#Structured_Markup_Processing_Tools"/>
</owl:Class>

<owl:Class rdf:about="#xmldomminidom">
  <rdfs:subClassOf rdf:resource="#Structured_Markup_Processing_Tools"/>
</owl:Class>

<owl:Class rdf:about="#xmldompulldom">
  <rdfs:subClassOf rdf:resource="#Structured_Markup_Processing_Tools"/>
</owl:Class>

<owl:Class rdf:about="#xmlsax">
  <rdfs:subClassOf rdf:resource="#Structured_Markup_Processing_Tools"/>
</owl:Class>

<owl:Class rdf:about="#xmlsaxhandler">
  <rdfs:subClassOf rdf:resource="#Structured_Markup_Processing_Tools"/>
</owl:Class>

<owl:Class rdf:about="#xmlsaxsaxutils">
  <rdfs:subClassOf rdf:resource="#Structured_Markup_Processing_Tools"/>
</owl:Class>

<owl:Class rdf:about="#xmlsaxxmlreader">
  <rdfs:subClassOf rdf:resource="#Structured_Markup_Processing_Tools"/>
</owl:Class>

<owl:Class rdf:about="#xmlparsersexpat">
  <rdfs:subClassOf rdf:resource="#Structured_Markup_Processing_Tools"/>
</owl:Class>

<owl:Class rdf:about="#Internet_Protocols_and_Support">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#webbrowser">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#wsgiref">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#urllib">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#urllibrequest">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#urllibresponse">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#urllibparse">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#urlliberror">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#urllibrobotparser">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#http">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#httpclient">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#ftplib">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#poplib">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#imaplib">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#smtplib">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#uuid">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#socketserver">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#httpserver">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#httpcookies">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#httpcookiejar">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#xmlrpc">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#xmlrpcclient">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#xmlrpcserver">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#ipaddress">
  <rdfs:subClassOf rdf:resource="#Internet_Protocols_and_Support"/>
</owl:Class>

<owl:Class rdf:about="#Multimedia_Services">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#wave">
  <rdfs:subClassOf rdf:resource="#Multimedia_Services"/>
</owl:Class>

<owl:Class rdf:about="#colorsys">
  <rdfs:subClassOf rdf:resource="#Multimedia_Services"/>
</owl:Class>

<owl:Class rdf:about="#Internationalization">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#gettext">
  <rdfs:subClassOf rdf:resource="#Internationalization"/>
</owl:Class>

<owl:Class rdf:about="#locale">
  <rdfs:subClassOf rdf:resource="#Internationalization"/>
</owl:Class>

<owl:Class rdf:about="#Program_Frameworks">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#turtle">
  <rdfs:subClassOf rdf:resource="#Program_Frameworks"/>
</owl:Class>

<owl:Class rdf:about="#cmd">
  <rdfs:subClassOf rdf:resource="#Program_Frameworks"/>
</owl:Class>

<owl:Class rdf:about="#shlex">
  <rdfs:subClassOf rdf:resource="#Program_Frameworks"/>
</owl:Class>

<owl:Class rdf:about="#Graphical_User_Interfaces_with_Tk">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#tkinter">
  <rdfs:subClassOf rdf:resource="#Graphical_User_Interfaces_with_Tk"/>
</owl:Class>

<owl:Class rdf:about="#tkintercolorchooser">
  <rdfs:subClassOf rdf:resource="#Graphical_User_Interfaces_with_Tk"/>
</owl:Class>

<owl:Class rdf:about="#tkinterfont">
  <rdfs:subClassOf rdf:resource="#Graphical_User_Interfaces_with_Tk"/>
</owl:Class>

<owl:Class rdf:about="#Tkinter_Dialog">
  <rdfs:subClassOf rdf:resource="#Graphical_User_Interfaces_with_Tk"/>
</owl:Class>

<owl:Class rdf:about="#tkintermessagebox">
  <rdfs:subClassOf rdf:resource="#Graphical_User_Interfaces_with_Tk"/>
</owl:Class>

<owl:Class rdf:about="#tkinterscrolledtext">
  <rdfs:subClassOf rdf:resource="#Graphical_User_Interfaces_with_Tk"/>
</owl:Class>

<owl:Class rdf:about="#tkinterdnd">
  <rdfs:subClassOf rdf:resource="#Graphical_User_Interfaces_with_Tk"/>
</owl:Class>

<owl:Class rdf:about="#tkinterttk">
  <rdfs:subClassOf rdf:resource="#Graphical_User_Interfaces_with_Tk"/>
</owl:Class>

<owl:Class rdf:about="#tkintertix">
  <rdfs:subClassOf rdf:resource="#Graphical_User_Interfaces_with_Tk"/>
</owl:Class>

<owl:Class rdf:about="#IDL">
  <rdfs:subClassOf rdf:resource="#Graphical_User_Interfaces_with_Tk"/>
</owl:Class>

<owl:Class rdf:about="#Development_Tools">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#typing">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#pydoc">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#Python_Development_Mod">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#Effects_of_the_Python_Development_Mod">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#ResourceWarning_Exampl">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#Bad_file_descriptor_error_exampl">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#doctest">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#unittest">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#unittestmock">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#2to3">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#test">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#testsupport">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#testsupportsocket_helper">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#testsupportscript_helper">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#testsupportbytecode_helper">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#testsupportthreading_helper">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#testsupportos_helper">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#testsupportimport_helper">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#testsupportwarnings_helper">
  <rdfs:subClassOf rdf:resource="#Development_Tools"/>
</owl:Class>

<owl:Class rdf:about="#Debugging_and_Profiling">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#Audit_events_tabl">
  <rdfs:subClassOf rdf:resource="#Debugging_and_Profiling"/>
</owl:Class>

<owl:Class rdf:about="#bdb">
  <rdfs:subClassOf rdf:resource="#Debugging_and_Profiling"/>
</owl:Class>

<owl:Class rdf:about="#faulthandler">
  <rdfs:subClassOf rdf:resource="#Debugging_and_Profiling"/>
</owl:Class>

<owl:Class rdf:about="#pdb">
  <rdfs:subClassOf rdf:resource="#Debugging_and_Profiling"/>
</owl:Class>

<owl:Class rdf:about="#The_Python_Profiler">
  <rdfs:subClassOf rdf:resource="#Debugging_and_Profiling"/>
</owl:Class>

<owl:Class rdf:about="#timeit">
  <rdfs:subClassOf rdf:resource="#Debugging_and_Profiling"/>
</owl:Class>

<owl:Class rdf:about="#trace">
  <rdfs:subClassOf rdf:resource="#Debugging_and_Profiling"/>
</owl:Class>

<owl:Class rdf:about="#tracemalloc">
  <rdfs:subClassOf rdf:resource="#Debugging_and_Profiling"/>
</owl:Class>

<owl:Class rdf:about="#Software_Packaging_and_Distribution">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#distutils">
  <rdfs:subClassOf rdf:resource="#Software_Packaging_and_Distribution"/>
</owl:Class>

<owl:Class rdf:about="#ensurepip">
  <rdfs:subClassOf rdf:resource="#Software_Packaging_and_Distribution"/>
</owl:Class>

<owl:Class rdf:about="#venv">
  <rdfs:subClassOf rdf:resource="#Software_Packaging_and_Distribution"/>
</owl:Class>

<owl:Class rdf:about="#zipapp">
  <rdfs:subClassOf rdf:resource="#Software_Packaging_and_Distribution"/>
</owl:Class>

<owl:Class rdf:about="#Python_Runtime_Services">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#sys">
  <rdfs:subClassOf rdf:resource="#Python_Runtime_Services"/>
</owl:Class>

<owl:Class rdf:about="#sysconfig">
  <rdfs:subClassOf rdf:resource="#Python_Runtime_Services"/>
</owl:Class>

<owl:Class rdf:about="#builtins">
  <rdfs:subClassOf rdf:resource="#Python_Runtime_Services"/>
</owl:Class>

<owl:Class rdf:about="#__main__">
  <rdfs:subClassOf rdf:resource="#Python_Runtime_Services"/>
</owl:Class>

<owl:Class rdf:about="#warnings">
  <rdfs:subClassOf rdf:resource="#Python_Runtime_Services"/>
</owl:Class>

<owl:Class rdf:about="#dataclasses">
  <rdfs:subClassOf rdf:resource="#Python_Runtime_Services"/>
</owl:Class>

<owl:Class rdf:about="#contextlib">
  <rdfs:subClassOf rdf:resource="#Python_Runtime_Services"/>
</owl:Class>

<owl:Class rdf:about="#abc">
  <rdfs:subClassOf rdf:resource="#Python_Runtime_Services"/>
</owl:Class>

<owl:Class rdf:about="#atexit">
  <rdfs:subClassOf rdf:resource="#Python_Runtime_Services"/>
</owl:Class>

<owl:Class rdf:about="#traceback">
  <rdfs:subClassOf rdf:resource="#Python_Runtime_Services"/>
</owl:Class>

<owl:Class rdf:about="#__future__">
  <rdfs:subClassOf rdf:resource="#Python_Runtime_Services"/>
</owl:Class>

<owl:Class rdf:about="#gc">
  <rdfs:subClassOf rdf:resource="#Python_Runtime_Services"/>
</owl:Class>

<owl:Class rdf:about="#inspect">
  <rdfs:subClassOf rdf:resource="#Python_Runtime_Services"/>
</owl:Class>

<owl:Class rdf:about="#site">
  <rdfs:subClassOf rdf:resource="#Python_Runtime_Services"/>
</owl:Class>

<owl:Class rdf:about="#Custom_Python_Interpreters">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#code">
  <rdfs:subClassOf rdf:resource="#Custom_Python_Interpreters"/>
</owl:Class>

<owl:Class rdf:about="#codeop">
  <rdfs:subClassOf rdf:resource="#Custom_Python_Interpreters"/>
</owl:Class>

<owl:Class rdf:about="#Importing_Modules">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#zipimport">
  <rdfs:subClassOf rdf:resource="#Importing_Modules"/>
</owl:Class>

<owl:Class rdf:about="#pkgutil">
  <rdfs:subClassOf rdf:resource="#Importing_Modules"/>
</owl:Class>

<owl:Class rdf:about="#modulefinder">
  <rdfs:subClassOf rdf:resource="#Importing_Modules"/>
</owl:Class>

<owl:Class rdf:about="#runpy">
  <rdfs:subClassOf rdf:resource="#Importing_Modules"/>
</owl:Class>

<owl:Class rdf:about="#importlib">
  <rdfs:subClassOf rdf:resource="#Importing_Modules"/>
</owl:Class>

<owl:Class rdf:about="#importlibresources__Resource">
  <rdfs:subClassOf rdf:resource="#Importing_Modules"/>
</owl:Class>

<owl:Class rdf:about="#Deprecated_function">
  <rdfs:subClassOf rdf:resource="#Importing_Modules"/>
</owl:Class>

<owl:Class rdf:about="#importlibresourcesabc__Abstract_base_classes_for_resource">
  <rdfs:subClassOf rdf:resource="#Importing_Modules"/>
</owl:Class>

<owl:Class rdf:about="#Using_importlibmetadat">
  <rdfs:subClassOf rdf:resource="#Importing_Modules"/>
</owl:Class>

<owl:Class rdf:about="#The_initialization_of_the_syspath_module_search_pat">
  <rdfs:subClassOf rdf:resource="#Importing_Modules"/>
</owl:Class>

<owl:Class rdf:about="#Python_Language_Services">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#ast">
  <rdfs:subClassOf rdf:resource="#Python_Language_Services"/>
</owl:Class>

<owl:Class rdf:about="#symtable">
  <rdfs:subClassOf rdf:resource="#Python_Language_Services"/>
</owl:Class>

<owl:Class rdf:about="#token">
  <rdfs:subClassOf rdf:resource="#Python_Language_Services"/>
</owl:Class>

<owl:Class rdf:about="#keyword">
  <rdfs:subClassOf rdf:resource="#Python_Language_Services"/>
</owl:Class>

<owl:Class rdf:about="#tokenize">
  <rdfs:subClassOf rdf:resource="#Python_Language_Services"/>
</owl:Class>

<owl:Class rdf:about="#tabnanny">
  <rdfs:subClassOf rdf:resource="#Python_Language_Services"/>
</owl:Class>

<owl:Class rdf:about="#pyclbr">
  <rdfs:subClassOf rdf:resource="#Python_Language_Services"/>
</owl:Class>

<owl:Class rdf:about="#py_compile">
  <rdfs:subClassOf rdf:resource="#Python_Language_Services"/>
</owl:Class>

<owl:Class rdf:about="#compileall">
  <rdfs:subClassOf rdf:resource="#Python_Language_Services"/>
</owl:Class>

<owl:Class rdf:about="#dis">
  <rdfs:subClassOf rdf:resource="#Python_Language_Services"/>
</owl:Class>

<owl:Class rdf:about="#pickletools">
  <rdfs:subClassOf rdf:resource="#Python_Language_Services"/>
</owl:Class>

<owl:Class rdf:about="#MS_Windows_Specific_Services">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#msvcrt">
  <rdfs:subClassOf rdf:resource="#MS_Windows_Specific_Services"/>
</owl:Class>

<owl:Class rdf:about="#winreg">
  <rdfs:subClassOf rdf:resource="#MS_Windows_Specific_Services"/>
</owl:Class>

<owl:Class rdf:about="#winsound">
  <rdfs:subClassOf rdf:resource="#MS_Windows_Specific_Services"/>
</owl:Class>

<owl:Class rdf:about="#Unix_Specific_Services">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#posix">
  <rdfs:subClassOf rdf:resource="#Unix_Specific_Services"/>
</owl:Class>

<owl:Class rdf:about="#pwd">
  <rdfs:subClassOf rdf:resource="#Unix_Specific_Services"/>
</owl:Class>

<owl:Class rdf:about="#grp">
  <rdfs:subClassOf rdf:resource="#Unix_Specific_Services"/>
</owl:Class>

<owl:Class rdf:about="#termios">
  <rdfs:subClassOf rdf:resource="#Unix_Specific_Services"/>
</owl:Class>

<owl:Class rdf:about="#tty">
  <rdfs:subClassOf rdf:resource="#Unix_Specific_Services"/>
</owl:Class>

<owl:Class rdf:about="#pty">
  <rdfs:subClassOf rdf:resource="#Unix_Specific_Services"/>
</owl:Class>

<owl:Class rdf:about="#fcntl">
  <rdfs:subClassOf rdf:resource="#Unix_Specific_Services"/>
</owl:Class>

<owl:Class rdf:about="#resource">
  <rdfs:subClassOf rdf:resource="#Unix_Specific_Services"/>
</owl:Class>

<owl:Class rdf:about="#syslog">
  <rdfs:subClassOf rdf:resource="#Unix_Specific_Services"/>
</owl:Class>

<owl:Class rdf:about="#Superseded_Modules">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<owl:Class rdf:about="#aifc">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#asynchat">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#asyncore">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#audioop">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#cgi">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#cgitb">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#chunk">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#crypt">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#imghdr">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#imp">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#mailcap">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#msilib">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#nis">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#nntplib">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#optparse">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#ossaudiodev">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#pipes">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#smtpd">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#sndhdr">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#spwd">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#sunau">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#telnetlib">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#uu">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#xdrlib">
  <rdfs:subClassOf rdf:resource="#Superseded_Modules"/>
</owl:Class>

<owl:Class rdf:about="#Security_Considerations">
  <rdfs:subClassOf rdf:resource="#Standart_Library"/>
</owl:Class>

<if rdf:about="#TestLang">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText>The if statement is used for conditional execution:

if_stmt ::=  "if" assignment_expression ":" suite
             ("elif" assignment_expression ":" suite)*
             ["else" ":" suite]</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</if>

<string rdf:about="#string1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</string>

<re rdf:about="#re1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides regular expression matching operations similar to
those found in Perl.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</re>

<difflib rdf:about="#difflib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides classes and functions for comparing sequences. It
can be used for example, for comparing files, and can produce information
about file differences in various formats, including HTML and context and unified
diffs. For comparing directories and files, see also, the &lt;a class="reference internal" href="filecmp.html#module-filecmp" title="filecmp: Compare files efficiently."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;filecmp&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</difflib>

<textwrap rdf:about="#textwrap1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-textwrap" title="textwrap: Text wrapping and filling"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;textwrap&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides some convenience functions,
as well as &lt;a class="reference internal" href="#textwrap.TextWrapper" title="textwrap.TextWrapper"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;TextWrapper&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, the class that does all the work.
If you’re just wrapping or filling one or two text strings, the convenience
functions should be good enough; otherwise, you should use an instance of
&lt;a class="reference internal" href="#textwrap.TextWrapper" title="textwrap.TextWrapper"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;TextWrapper&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; for efficiency.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</textwrap>

<unicodedata rdf:about="#unicodedata1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides access to the Unicode Character Database (UCD) which
defines character properties for all Unicode characters. The data contained in
this database is compiled from the &lt;a class="reference external" href="https://www.unicode.org/Public/14.0.0/ucd"&gt;UCD version 14.0.0&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</unicodedata>

<stringprep rdf:about="#stringprep1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;When identifying things (such as host names) in the internet, it is often
necessary to compare such identifications for “equality”. Exactly how this
comparison is executed may depend on the application domain, e.g. whether it
should be case-insensitive or not. It may be also necessary to restrict the
possible identifications, to allow only identifications consisting of
“printable” characters.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</stringprep>

<readline rdf:about="#readline1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-readline" title="readline: GNU readline support for Python. (Unix)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;readline&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines a number of functions to facilitate
completion and reading/writing of history files from the Python interpreter.
This module can be used directly, or via the &lt;a class="reference internal" href="rlcompleter.html#module-rlcompleter" title="rlcompleter: Python identifier completion, suitable for the GNU readline library."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;rlcompleter&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module, which
supports completion of Python identifiers at the interactive prompt.  Settings
made using  this module affect the behaviour of both the interpreter’s
interactive prompt  and the prompts offered by the built-in &lt;a class="reference internal" href="functions.html#input" title="input"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;input()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
function.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</readline>

<rlcompleter rdf:about="#rlcompleter1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-rlcompleter" title="rlcompleter: Python identifier completion, suitable for the GNU readline library."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;rlcompleter&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines a completion function suitable for the
&lt;a class="reference internal" href="readline.html#module-readline" title="readline: GNU readline support for Python. (Unix)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;readline&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module by completing valid Python identifiers and keywords.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</rlcompleter>

<struct rdf:about="#struct1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module converts between Python values and C structs represented
as Python &lt;a class="reference internal" href="stdtypes.html#bytes" title="bytes"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;bytes&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; objects.  Compact &lt;a class="reference internal" href="#struct-format-strings"&gt;&lt;span class="std std-ref"&gt;format strings&lt;/span&gt;&lt;/a&gt;
describe the intended conversions to/from Python values.
The module’s functions and objects can be used for two largely
distinct applications, data exchange with external sources (files or
network connections), or data transfer between the Python application
and the C layer.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</struct>

<codecs rdf:about="#codecs1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines base classes for standard Python codecs (encoders and
decoders) and provides access to the internal Python codec registry, which
manages the codec and error handling lookup process. Most standard codecs
are &lt;a class="reference internal" href="../glossary.html#term-text-encoding"&gt;&lt;span class="xref std std-term"&gt;text encodings&lt;/span&gt;&lt;/a&gt;, which encode text to bytes (and
decode bytes to text), but there are also codecs provided that encode text to
text, and bytes to bytes. Custom codecs may encode and decode between arbitrary
types, but some module features are restricted to be used specifically with
&lt;a class="reference internal" href="../glossary.html#term-text-encoding"&gt;&lt;span class="xref std std-term"&gt;text encodings&lt;/span&gt;&lt;/a&gt; or with codecs that encode to
&lt;a class="reference internal" href="stdtypes.html#bytes" title="bytes"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;bytes&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</codecs>

<datetime rdf:about="#datetime1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-datetime" title="datetime: Basic date and time types."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;datetime&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module supplies classes for manipulating dates and times.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</datetime>

<zoneinfo rdf:about="#zoneinfo1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-zoneinfo" title="zoneinfo: IANA time zone support"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;zoneinfo&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a concrete time zone implementation to
support the IANA time zone database as originally specified in &lt;span class="target" id="index-0"&gt;&lt;/span&gt;&lt;a class="pep reference external" href="https://peps.python.org/pep-0615/"&gt;&lt;strong&gt;PEP 615&lt;/strong&gt;&lt;/a&gt;. By
default, &lt;a class="reference internal" href="#module-zoneinfo" title="zoneinfo: IANA time zone support"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;zoneinfo&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; uses the system’s time zone data if available; if no
system time zone data is available, the library will fall back to using the
first-party &lt;a class="reference external" href="https://pypi.org/project/tzdata/"&gt;tzdata&lt;/a&gt; package available on PyPI.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</zoneinfo>

<calendar rdf:about="#calendar1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module allows you to output calendars like the Unix &lt;strong class="program"&gt;cal&lt;/strong&gt; program,
and provides additional useful functions related to the calendar. By default,
these calendars have Monday as the first day of the week, and Sunday as the last
(the European convention). Use &lt;a class="reference internal" href="#calendar.setfirstweekday" title="calendar.setfirstweekday"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;setfirstweekday()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; to set the first day of
the week to Sunday (6) or to any other weekday.  Parameters that specify dates
are given as integers. For related
functionality, see also the &lt;a class="reference internal" href="datetime.html#module-datetime" title="datetime: Basic date and time types."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;datetime&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a class="reference internal" href="time.html#module-time" title="time: Time access and conversions."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;time&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; modules.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</calendar>

<collections rdf:about="#collections1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module implements specialized container datatypes providing alternatives to
Python’s general purpose built-in containers, &lt;a class="reference internal" href="stdtypes.html#dict" title="dict"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;dict&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a class="reference internal" href="stdtypes.html#list" title="list"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;list&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;,
&lt;a class="reference internal" href="stdtypes.html#set" title="set"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;set&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a class="reference internal" href="stdtypes.html#tuple" title="tuple"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;tuple&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</collections>

<collectionsabc rdf:about="#collectionsabc1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides &lt;a class="reference internal" href="../glossary.html#term-abstract-base-class"&gt;&lt;span class="xref std std-term"&gt;abstract base classes&lt;/span&gt;&lt;/a&gt; that
can be used to test whether a class provides a particular interface; for
example, whether it is &lt;a class="reference internal" href="../glossary.html#term-hashable"&gt;&lt;span class="xref std std-term"&gt;hashable&lt;/span&gt;&lt;/a&gt; or whether it is a mapping.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</collectionsabc>

<heapq rdf:about="#heapq1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides an implementation of the heap queue algorithm, also known
as the priority queue algorithm.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</heapq>

<bisect rdf:about="#bisect1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides support for maintaining a list in sorted order without
having to sort the list after each insertion.  For long lists of items with
expensive comparison operations, this can be an improvement over the more common
approach.  The module is called &lt;a class="reference internal" href="#module-bisect" title="bisect: Array bisection algorithms for binary searching."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;bisect&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; because it uses a basic bisection
algorithm to do its work.  The source code may be most useful as a working
example of the algorithm (the boundary conditions are already right!).&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</bisect>

<array rdf:about="#array1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines an object type which can compactly represent an array of
basic values: characters, integers, floating point numbers.  Arrays are sequence
types and behave very much like lists, except that the type of objects stored in
them is constrained.  The type is specified at object creation time by using a
&lt;em class="dfn"&gt;type code&lt;/em&gt;, which is a single character.  The following type codes are
defined:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</array>

<weakref rdf:about="#weakref1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-weakref" title="weakref: Support for weak references and weak dictionaries."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;weakref&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module allows the Python programmer to create &lt;em class="dfn"&gt;weak
references&lt;/em&gt; to objects.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</weakref>

<types rdf:about="#types1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines utility functions to assist in dynamic creation of
new types.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</types>

<copy rdf:about="#copy1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;Assignment statements in Python do not copy objects, they create bindings
between a target and an object. For collections that are mutable or contain
mutable items, a copy is sometimes needed so one can change one copy without
changing the other. This module provides generic shallow and deep copy
operations (explained below).&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</copy>

<pprint rdf:about="#pprint1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-pprint" title="pprint: Data pretty printer."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;pprint&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a capability to “pretty-print” arbitrary
Python data structures in a form which can be used as input to the interpreter.
If the formatted structures include objects which are not fundamental Python
types, the representation may not be loadable.  This may be the case if objects
such as files, sockets or classes are included, as well as many other
objects which are not representable as Python literals.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</pprint>

<reprlib rdf:about="#reprlib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-reprlib" title="reprlib: Alternate repr() implementation with size limits."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;reprlib&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a means for producing object representations
with limits on the size of the resulting strings. This is used in the Python
debugger and may be useful in other contexts as well.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</reprlib>

<enum rdf:about="#enum1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;An enumeration:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</enum>

<graphlib rdf:about="#graphlib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</graphlib>

<numbers rdf:about="#numbers1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-numbers" title="numbers: Numeric abstract base classes (Complex, Real, Integral, etc.)."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;numbers&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module (&lt;span class="target" id="index-0"&gt;&lt;/span&gt;&lt;a class="pep reference external" href="https://peps.python.org/pep-3141/"&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt;) defines a hierarchy of numeric
&lt;a class="reference internal" href="../glossary.html#term-abstract-base-class"&gt;&lt;span class="xref std std-term"&gt;abstract base classes&lt;/span&gt;&lt;/a&gt; which progressively define
more operations.  None of the types defined in this module are intended to be instantiated.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</numbers>

<math rdf:about="#math1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides access to the mathematical functions defined by the C
standard.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</math>

<cmath rdf:about="#cmath1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides access to mathematical functions for complex numbers.  The
functions in this module accept integers, floating-point numbers or complex
numbers as arguments. They will also accept any Python object that has either a
&lt;code class="xref py py-meth docutils literal notranslate"&gt;&lt;span class="pre"&gt;__complex__()&lt;/span&gt;&lt;/code&gt; or a &lt;code class="xref py py-meth docutils literal notranslate"&gt;&lt;span class="pre"&gt;__float__()&lt;/span&gt;&lt;/code&gt; method: these methods are used to
convert the object to a complex or floating-point number, respectively, and
the function is then applied to the result of the conversion.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</cmath>

<decimal rdf:about="#decimal1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-decimal" title="decimal: Implementation of the General Decimal Arithmetic  Specification."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;decimal&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides support for fast correctly rounded
decimal floating point arithmetic. It offers several advantages over the
&lt;a class="reference internal" href="functions.html#float" title="float"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;float&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; datatype:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</decimal>

<fractions rdf:about="#fractions1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-fractions" title="fractions: Rational numbers."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;fractions&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides support for rational number arithmetic.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</fractions>

<random rdf:about="#random1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module implements pseudo-random number generators for various
distributions.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</random>

<statistics rdf:about="#statistics1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides functions for calculating mathematical statistics of
numeric (&lt;a class="reference internal" href="numbers.html#numbers.Real" title="numbers.Real"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Real&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;-valued) data.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</statistics>

<itertools rdf:about="#itertools1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module implements a number of &lt;a class="reference internal" href="../glossary.html#term-iterator"&gt;&lt;span class="xref std std-term"&gt;iterator&lt;/span&gt;&lt;/a&gt; building blocks inspired
by constructs from APL, Haskell, and SML.  Each has been recast in a form
suitable for Python.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</itertools>

<functools rdf:about="#functools1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-functools" title="functools: Higher-order functions and operations on callable objects."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;functools&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module is for higher-order functions: functions that act on
or return other functions. In general, any callable object can be treated as a
function for the purposes of this module.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</functools>

<operator rdf:about="#operator1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-operator" title="operator: Functions corresponding to the standard operators."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;operator&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module exports a set of efficient functions corresponding to
the intrinsic operators of Python.  For example, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;operator.add(x,&lt;/span&gt; &lt;span class="pre"&gt;y)&lt;/span&gt;&lt;/code&gt; is
equivalent to the expression &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;x+y&lt;/span&gt;&lt;/code&gt;. Many function names are those used for
special methods, without the double underscores.  For backward compatibility,
many of these have a variant with the double underscores kept. The variants
without the double underscores are preferred for clarity.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</operator>

<pathlib rdf:about="#pathlib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module offers classes representing filesystem paths with semantics
appropriate for different operating systems.  Path classes are divided
between &lt;a class="reference internal" href="#pure-paths"&gt;&lt;span class="std std-ref"&gt;pure paths&lt;/span&gt;&lt;/a&gt;, which provide purely computational
operations without I/O, and &lt;a class="reference internal" href="#concrete-paths"&gt;&lt;span class="std std-ref"&gt;concrete paths&lt;/span&gt;&lt;/a&gt;, which
inherit from pure paths but also provide I/O operations.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</pathlib>

<ospath rdf:about="#ospath1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module implements some useful functions on pathnames. To read or write
files see &lt;a class="reference internal" href="functions.html#open" title="open"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;open()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, and for accessing the filesystem see the &lt;a class="reference internal" href="os.html#module-os" title="os: Miscellaneous operating system interfaces."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;os&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
module. The path parameters can be passed as strings, or bytes, or any object
implementing the &lt;a class="reference internal" href="os.html#os.PathLike" title="os.PathLike"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;os.PathLike&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; protocol.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</ospath>

<fileinput rdf:about="#fileinput1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module implements a helper class and functions to quickly write a
loop over standard input or a list of files. If you just want to read or
write one file see &lt;a class="reference internal" href="functions.html#open" title="open"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;open()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</fileinput>

<stat rdf:about="#stat1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-stat" title="stat: Utilities for interpreting the results of os.stat(), os.lstat() and os.fstat()."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;stat&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines constants and functions for interpreting the
results of &lt;a class="reference internal" href="os.html#os.stat" title="os.stat"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;os.stat()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a class="reference internal" href="os.html#os.fstat" title="os.fstat"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;os.fstat()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a class="reference internal" href="os.html#os.lstat" title="os.lstat"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;os.lstat()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; (if they
exist).  For complete details about the &lt;code class="xref c c-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;stat()&lt;/span&gt;&lt;/code&gt;, &lt;code class="xref c c-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;fstat()&lt;/span&gt;&lt;/code&gt; and
&lt;code class="xref c c-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;lstat()&lt;/span&gt;&lt;/code&gt; calls, consult the documentation for your system.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</stat>

<filecmp rdf:about="#filecmp1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-filecmp" title="filecmp: Compare files efficiently."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;filecmp&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines functions to compare files and directories,
with various optional time/correctness trade-offs. For comparing files,
see also the &lt;a class="reference internal" href="difflib.html#module-difflib" title="difflib: Helpers for computing differences between objects."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;difflib&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</filecmp>

<tempfile rdf:about="#tempfile1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module creates temporary files and directories.  It works on all
supported platforms. &lt;a class="reference internal" href="#tempfile.TemporaryFile" title="tempfile.TemporaryFile"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;TemporaryFile&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a class="reference internal" href="#tempfile.NamedTemporaryFile" title="tempfile.NamedTemporaryFile"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;NamedTemporaryFile&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;,
&lt;a class="reference internal" href="#tempfile.TemporaryDirectory" title="tempfile.TemporaryDirectory"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;TemporaryDirectory&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a class="reference internal" href="#tempfile.SpooledTemporaryFile" title="tempfile.SpooledTemporaryFile"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;SpooledTemporaryFile&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; are high-level
interfaces which provide automatic cleanup and can be used as
context managers. &lt;a class="reference internal" href="#tempfile.mkstemp" title="tempfile.mkstemp"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;mkstemp()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and
&lt;a class="reference internal" href="#tempfile.mkdtemp" title="tempfile.mkdtemp"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;mkdtemp()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; are lower-level functions which require manual cleanup.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tempfile>

<glob rdf:about="#glob1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p id="index-1"&gt;The &lt;a class="reference internal" href="#module-glob" title="glob: Unix shell style pathname pattern expansion."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;glob&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module finds all the pathnames matching a specified pattern
according to the rules used by the Unix shell, although results are returned in
arbitrary order.  No tilde expansion is done, but &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;*&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;?&lt;/span&gt;&lt;/code&gt;, and character
ranges expressed with &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;[]&lt;/span&gt;&lt;/code&gt; will be correctly matched.  This is done by using
the &lt;a class="reference internal" href="os.html#os.scandir" title="os.scandir"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;os.scandir()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a class="reference internal" href="fnmatch.html#fnmatch.fnmatch" title="fnmatch.fnmatch"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;fnmatch.fnmatch()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; functions in concert, and
not by actually invoking a subshell.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</glob>

<fnmatch rdf:about="#fnmatch1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides support for Unix shell-style wildcards, which are &lt;em&gt;not&lt;/em&gt; the
same as regular expressions (which are documented in the &lt;a class="reference internal" href="re.html#module-re" title="re: Regular expression operations."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;re&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module).  The
special characters used in shell-style wildcards are:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</fnmatch>

<linecache rdf:about="#linecache1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-linecache" title="linecache: Provides random access to individual lines from text files."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;linecache&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module allows one to get any line from a Python source file, while
attempting to optimize internally, using a cache, the common case where many
lines are read from a single file.  This is used by the &lt;a class="reference internal" href="traceback.html#module-traceback" title="traceback: Print or retrieve a stack traceback."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;traceback&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module
to retrieve source lines for inclusion in  the formatted traceback.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</linecache>

<shutil rdf:about="#shutil1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-shutil" title="shutil: High-level file operations, including copying."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;shutil&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module offers a number of high-level operations on files and
collections of files.  In particular, functions are provided  which support file
copying and removal. For operations on individual files, see also the
&lt;a class="reference internal" href="os.html#module-os" title="os: Miscellaneous operating system interfaces."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;os&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</shutil>

<pickle rdf:about="#pickle1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-pickle" title="pickle: Convert Python objects to streams of bytes and back."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;pickle&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module implements binary protocols for serializing and
de-serializing a Python object structure.  &lt;em&gt;“Pickling”&lt;/em&gt; is the process
whereby a Python object hierarchy is converted into a byte stream, and
&lt;em&gt;“unpickling”&lt;/em&gt; is the inverse operation, whereby a byte stream
(from a &lt;a class="reference internal" href="../glossary.html#term-binary-file"&gt;&lt;span class="xref std std-term"&gt;binary file&lt;/span&gt;&lt;/a&gt; or &lt;a class="reference internal" href="../glossary.html#term-bytes-like-object"&gt;&lt;span class="xref std std-term"&gt;bytes-like object&lt;/span&gt;&lt;/a&gt;) is converted
back into an object hierarchy.  Pickling (and unpickling) is alternatively
known as “serialization”, “marshalling,” &lt;a class="footnote-reference brackets" href="#id7" id="id1"&gt;1&lt;/a&gt; or “flattening”; however, to
avoid confusion, the terms used here are “pickling” and “unpickling”.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</pickle>

<copyreg rdf:about="#copyreg1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-copyreg" title="copyreg: Register pickle support functions."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;copyreg&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module offers a way to define functions used while pickling
specific objects.  The &lt;a class="reference internal" href="pickle.html#module-pickle" title="pickle: Convert Python objects to streams of bytes and back."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;pickle&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a class="reference internal" href="copy.html#module-copy" title="copy: Shallow and deep copy operations."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;copy&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; modules use those functions
when pickling/copying those objects.  The module provides configuration
information about object constructors which are not classes.
Such constructors may be factory functions or class instances.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</copyreg>

<shelve rdf:about="#shelve1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;A “shelf” is a persistent, dictionary-like object.  The difference with “dbm”
databases is that the values (not the keys!) in a shelf can be essentially
arbitrary Python objects — anything that the &lt;a class="reference internal" href="pickle.html#module-pickle" title="pickle: Convert Python objects to streams of bytes and back."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;pickle&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module can handle.
This includes most class instances, recursive data types, and objects containing
lots of shared  sub-objects.  The keys are ordinary strings.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</shelve>

<marshal rdf:about="#marshal1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module contains functions that can read and write Python values in a binary
format.  The format is specific to Python, but independent of machine
architecture issues (e.g., you can write a Python value to a file on a PC,
transport the file to a Sun, and read it back there).  Details of the format are
undocumented on purpose; it may change between Python versions (although it
rarely does). &lt;a class="footnote-reference brackets" href="#id2" id="id1"&gt;1&lt;/a&gt;&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</marshal>

<dbm rdf:about="#dbm1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;&lt;a class="reference internal" href="#module-dbm" title='dbm: Interfaces to various Unix "database" formats.'&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;dbm&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is a generic interface to variants of the DBM database —
&lt;a class="reference internal" href="#module-dbm.gnu" title="dbm.gnu: GNU's reinterpretation of dbm. (Unix)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;dbm.gnu&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; or &lt;a class="reference internal" href="#module-dbm.ndbm" title='dbm.ndbm: The standard "database" interface, based on ndbm. (Unix)'&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;dbm.ndbm&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.  If none of these modules is installed, the
slow-but-simple implementation in module &lt;a class="reference internal" href="#module-dbm.dumb" title="dbm.dumb: Portable implementation of the simple DBM interface."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;dbm.dumb&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; will be used.  There
is a &lt;a class="reference external" href="https://www.jcea.es/programacion/pybsddb.htm"&gt;third party interface&lt;/a&gt; to
the Oracle Berkeley DB.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</dbm>

<sqlite3 rdf:about="#sqlite31">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</sqlite3>

<zlib rdf:about="#zlib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;For applications that require data compression, the functions in this module
allow compression and decompression, using the zlib library. The zlib library
has its own home page at &lt;a class="reference external" href="https://www.zlib.net"&gt;https://www.zlib.net&lt;/a&gt;.   There are known
incompatibilities between the Python module and versions of the zlib library
earlier than 1.1.3; 1.1.3 has a &lt;a class="reference external" href="https://zlib.net/zlib_faq.html#faq33"&gt;security vulnerability&lt;/a&gt;, so we recommend using
1.1.4 or later.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</zlib>

<gzip rdf:about="#gzip1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides a simple interface to compress and decompress files just
like the GNU programs &lt;strong class="program"&gt;gzip&lt;/strong&gt; and &lt;strong class="program"&gt;gunzip&lt;/strong&gt; would.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</gzip>

<bz2 rdf:about="#bz21">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides a comprehensive interface for compressing and
decompressing data using the bzip2 compression algorithm.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</bz2>

<lzma rdf:about="#lzma1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides classes and convenience functions for compressing and
decompressing data using the LZMA compression algorithm. Also included is a file
interface supporting the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.xz&lt;/span&gt;&lt;/code&gt; and legacy &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.lzma&lt;/span&gt;&lt;/code&gt; file formats used by the
&lt;strong class="program"&gt;xz&lt;/strong&gt; utility, as well as raw compressed streams.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</lzma>

<zipfile rdf:about="#zipfile1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The ZIP file format is a common archive and compression standard. This module
provides tools to create, read, write, append, and list a ZIP file.  Any
advanced use of this module will require an understanding of the format, as
defined in &lt;a class="reference external" href="https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT"&gt;PKZIP Application Note&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</zipfile>

<tarfile rdf:about="#tarfile1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-tarfile" title="tarfile: Read and write tar-format archive files."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tarfile&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module makes it possible to read and write tar
archives, including those using gzip, bz2 and lzma compression.
Use the &lt;a class="reference internal" href="zipfile.html#module-zipfile" title="zipfile: Read and write ZIP-format archive files."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;zipfile&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module to read or write &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;.zip&lt;/span&gt;&lt;/code&gt; files, or the
higher-level functions in &lt;a class="reference internal" href="shutil.html#archiving-operations"&gt;&lt;span class="std std-ref"&gt;shutil&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tarfile>

<csv rdf:about="#csv1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The so-called CSV (Comma Separated Values) format is the most common import and
export format for spreadsheets and databases.  CSV format was used for many
years prior to attempts to describe the format in a standardized way in
&lt;span class="target" id="index-1"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc4180.html"&gt;&lt;strong&gt;RFC 4180&lt;/strong&gt;&lt;/a&gt;.  The lack of a well-defined standard means that subtle differences
often exist in the data produced and consumed by different applications.  These
differences can make it annoying to process CSV files from multiple sources.
Still, while the delimiters and quoting characters vary, the overall format is
similar enough that it is possible to write a single module which can
efficiently manipulate such data, hiding the details of reading and writing the
data from the programmer.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</csv>

<configparser rdf:about="#configparser1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides the &lt;a class="reference internal" href="#configparser.ConfigParser" title="configparser.ConfigParser"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;ConfigParser&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class which implements a basic
configuration language which provides a structure similar to what’s found in
Microsoft Windows INI files.  You can use this to write Python programs which
can be customized by end users easily.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</configparser>

<tomllib rdf:about="#tomllib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides an interface for parsing TOML (Tom’s Obvious Minimal
Language, &lt;a class="reference external" href="https://toml.io/en/"&gt;https://toml.io&lt;/a&gt;). This module does not
support writing TOML.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tomllib>

<netrc rdf:about="#netrc1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#netrc.netrc" title="netrc.netrc"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;netrc&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class parses and encapsulates the netrc file format used by
the Unix &lt;strong class="program"&gt;ftp&lt;/strong&gt; program and other FTP clients.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</netrc>

<plistlib rdf:about="#plistlib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides an interface for reading and writing the “property list”
files used by Apple, primarily on macOS and iOS. This module supports both binary
and XML plist files.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</plistlib>

<hashlib rdf:about="#hashlib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module implements a common interface to many different secure hash and
message digest algorithms.  Included are the FIPS secure hash algorithms SHA1,
SHA224, SHA256, SHA384, and SHA512 (defined in FIPS 180-2) as well as RSA’s MD5
algorithm (defined in internet &lt;span class="target" id="index-1"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc1321.html"&gt;&lt;strong&gt;RFC 1321&lt;/strong&gt;&lt;/a&gt;).  The terms “secure hash” and
“message digest” are interchangeable.  Older algorithms were called message
digests.  The modern term is secure hash.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</hashlib>

<hmac rdf:about="#hmac1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module implements the HMAC algorithm as described by &lt;span class="target" id="index-0"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2104.html"&gt;&lt;strong&gt;RFC 2104&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</hmac>

<secrets rdf:about="#secrets1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-secrets" title="secrets: Generate secure random numbers for managing secrets."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;secrets&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module is used for generating cryptographically strong
random numbers suitable for managing data such as passwords, account
authentication, security tokens, and related secrets.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</secrets>

<os rdf:about="#os1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides a portable way of using operating system dependent
functionality.  If you just want to read or write a file see &lt;a class="reference internal" href="functions.html#open" title="open"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;open()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, if
you want to manipulate paths, see the &lt;a class="reference internal" href="os.path.html#module-os.path" title="os.path: Operations on pathnames."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;os.path&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module, and if you want to
read all the lines in all the files on the command line see the &lt;a class="reference internal" href="fileinput.html#module-fileinput" title="fileinput: Loop over standard input or a list of files."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;fileinput&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
module.  For creating temporary files and directories see the &lt;a class="reference internal" href="tempfile.html#module-tempfile" title="tempfile: Generate temporary files and directories."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tempfile&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
module, and for high-level file and directory handling see the &lt;a class="reference internal" href="shutil.html#module-shutil" title="shutil: High-level file operations, including copying."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;shutil&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
module.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</os>

<io rdf:about="#io1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</io>

<time rdf:about="#time1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides various time-related functions. For related
functionality, see also the &lt;a class="reference internal" href="datetime.html#module-datetime" title="datetime: Basic date and time types."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;datetime&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a class="reference internal" href="calendar.html#module-calendar" title="calendar: Functions for working with calendars, including some emulation of the Unix cal program."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;calendar&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; modules.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</time>

<argparse rdf:about="#argparse1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-argparse" title="argparse: Command-line option and argument parsing library."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;argparse&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module makes it easy to write user-friendly command-line
interfaces. The program defines what arguments it requires, and &lt;a class="reference internal" href="#module-argparse" title="argparse: Command-line option and argument parsing library."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;argparse&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
will figure out how to parse those out of &lt;a class="reference internal" href="sys.html#sys.argv" title="sys.argv"&gt;&lt;code class="xref py py-data docutils literal notranslate"&gt;&lt;span class="pre"&gt;sys.argv&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.  The &lt;a class="reference internal" href="#module-argparse" title="argparse: Command-line option and argument parsing library."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;argparse&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
module also automatically generates help and usage messages.  The module
will also issue errors when users give the program invalid arguments.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</argparse>

<getopt rdf:about="#getopt1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module helps scripts to parse the command line arguments in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;sys.argv&lt;/span&gt;&lt;/code&gt;.
It supports the same conventions as the Unix &lt;code class="xref c c-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;getopt()&lt;/span&gt;&lt;/code&gt; function (including
the special meanings of arguments of the form ‘&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;-&lt;/span&gt;&lt;/code&gt;’ and ‘&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;--&lt;/span&gt;&lt;/code&gt;‘).  Long
options similar to those supported by GNU software may be used as well via an
optional third argument.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</getopt>

<logging rdf:about="#logging1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines functions and classes which implement a flexible event
logging system for applications and libraries.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</logging>

<loggingconfig rdf:about="#loggingconfig1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This section describes the API for configuring the logging module.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</loggingconfig>

<logginghandlers rdf:about="#logginghandlers1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The following useful handlers are provided in the package. Note that three of
the handlers (&lt;a class="reference internal" href="#logging.StreamHandler" title="logging.StreamHandler"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;StreamHandler&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a class="reference internal" href="#logging.FileHandler" title="logging.FileHandler"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;FileHandler&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and
&lt;a class="reference internal" href="#logging.NullHandler" title="logging.NullHandler"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;NullHandler&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;) are actually defined in the &lt;a class="reference internal" href="logging.html#module-logging" title="logging: Flexible event logging system for applications."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;logging&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module itself,
but have been documented here along with the other handlers.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</logginghandlers>

<getpass rdf:about="#getpass1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-getpass" title="getpass: Portable reading of passwords and retrieval of the userid."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;getpass&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides two functions:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</getpass>

<curses rdf:about="#curses1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-curses" title="curses: An interface to the curses library, providing portable terminal handling. (Unix)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;curses&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides an interface to the curses library, the
de-facto standard for portable advanced terminal handling.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</curses>

<cursestextpad rdf:about="#cursestextpad1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-curses" title="curses: An interface to the curses library, providing portable terminal handling. (Unix)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;curses&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides an interface to the curses library, the
de-facto standard for portable advanced terminal handling.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</cursestextpad>

<cursesascii rdf:about="#cursesascii1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-curses.ascii" title="curses.ascii: Constants and set-membership functions for ASCII characters."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;curses.ascii&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module supplies name constants for ASCII characters and
functions to test membership in various ASCII character classes.  The constants
supplied are names for control characters as follows:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</cursesascii>

<cursespanel rdf:about="#cursespanel1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;Panels are windows with the added feature of depth, so they can be stacked on
top of each other, and only the visible portions of each window will be
displayed.  Panels can be added, moved up or down in the stack, and removed.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</cursespanel>

<platform rdf:about="#platform1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</platform>

<errno rdf:about="#errno1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module makes available standard &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;errno&lt;/span&gt;&lt;/code&gt; system symbols. The value of each
symbol is the corresponding integer value. The names and descriptions are
borrowed from &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;linux/include/errno.h&lt;/span&gt;&lt;/code&gt;, which should be
all-inclusive.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</errno>

<ctypes rdf:about="#ctypes1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;&lt;a class="reference internal" href="#module-ctypes" title="ctypes: A foreign function library for Python."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;ctypes&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is a foreign function library for Python.  It provides C compatible
data types, and allows calling functions in DLLs or shared libraries.  It can be
used to wrap these libraries in pure Python.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</ctypes>

<threading rdf:about="#threading1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module constructs higher-level threading interfaces on top of the lower
level &lt;a class="reference internal" href="_thread.html#module-_thread" title="_thread: Low-level threading API."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;_thread&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</threading>

<multiprocessing rdf:about="#multiprocessing1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</multiprocessing>

<multiprocessingshared_memory rdf:about="#multiprocessingshared_memory1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides a class, &lt;a class="reference internal" href="#multiprocessing.shared_memory.SharedMemory" title="multiprocessing.shared_memory.SharedMemory"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;SharedMemory&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, for the allocation
and management of shared memory to be accessed by one or more processes
on a multicore or symmetric multiprocessor (SMP) machine.  To assist with
the life-cycle management of shared memory especially across distinct
processes, a &lt;a class="reference internal" href="multiprocessing.html#multiprocessing.managers.BaseManager" title="multiprocessing.managers.BaseManager"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;BaseManager&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; subclass,
&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;SharedMemoryManager&lt;/span&gt;&lt;/code&gt;, is also provided in the
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;multiprocessing.managers&lt;/span&gt;&lt;/code&gt; module.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</multiprocessingshared_memory>

<The_concurrent_packag rdf:about="#the_concurrent_packag1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</The_concurrent_packag>

<concurrentfutures rdf:about="#concurrentfutures1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-concurrent.futures" title="concurrent.futures: Execute computations concurrently using threads or processes."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;concurrent.futures&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a high-level interface for
asynchronously executing callables.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</concurrentfutures>

<subprocess rdf:about="#subprocess1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-subprocess" title="subprocess: Subprocess management."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;subprocess&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module allows you to spawn new processes, connect to their
input/output/error pipes, and obtain their return codes.  This module intends to
replace several older modules and functions:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</subprocess>

<sched rdf:about="#sched1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-sched" title="sched: General purpose event scheduler."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;sched&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines a class which implements a general purpose event
scheduler:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</sched>

<queue rdf:about="#queue1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-queue" title="queue: A synchronized queue class."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;queue&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module implements multi-producer, multi-consumer queues.
It is especially useful in threaded programming when information must be
exchanged safely between multiple threads.  The &lt;a class="reference internal" href="#queue.Queue" title="queue.Queue"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Queue&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class in this
module implements all the required locking semantics.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</queue>

<contextvars rdf:about="#contextvars1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides APIs to manage, store, and access context-local
state.  The &lt;a class="reference internal" href="#contextvars.ContextVar" title="contextvars.ContextVar"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;ContextVar&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class is used to declare
and work with &lt;em&gt;Context Variables&lt;/em&gt;.  The &lt;a class="reference internal" href="#contextvars.copy_context" title="contextvars.copy_context"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;copy_context()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
function and the &lt;a class="reference internal" href="#contextvars.Context" title="contextvars.Context"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Context&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class should be used to
manage the current context in asynchronous frameworks.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</contextvars>

<rdf:Description rdf:about="#_thread1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <rdf:type rdf:resource="#_thread"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides low-level primitives for working with multiple threads
(also called &lt;em class="dfn"&gt;light-weight processes&lt;/em&gt; or &lt;em class="dfn"&gt;tasks&lt;/em&gt;) — multiple threads of
control sharing their global data space.  For synchronization, simple locks
(also called &lt;em class="dfn"&gt;mutexes&lt;/em&gt; or &lt;em class="dfn"&gt;binary semaphores&lt;/em&gt;) are provided.
The &lt;a class="reference internal" href="threading.html#module-threading" title="threading: Thread-based parallelism."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;threading&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides an easier to use and higher-level
threading API built on top of this module.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</rdf:Description>

<asyncio rdf:about="#asyncio1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;asyncio is a library to write &lt;strong&gt;concurrent&lt;/strong&gt; code using
the &lt;strong&gt;async/await&lt;/strong&gt; syntax.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</asyncio>

<socket rdf:about="#socket1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides access to the BSD &lt;em&gt;socket&lt;/em&gt; interface. It is available on
all modern Unix systems, Windows, MacOS, and probably additional platforms.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</socket>

<ssl rdf:about="#ssl1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides access to Transport Layer Security (often known as “Secure
Sockets Layer”) encryption and peer authentication facilities for network
sockets, both client-side and server-side.  This module uses the OpenSSL
library. It is available on all modern Unix systems, Windows, macOS, and
probably additional platforms, as long as OpenSSL is installed on that platform.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</ssl>

<select rdf:about="#select1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides access to the &lt;code class="xref c c-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;select()&lt;/span&gt;&lt;/code&gt; and &lt;code class="xref c c-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;poll()&lt;/span&gt;&lt;/code&gt; functions
available in most operating systems, &lt;code class="xref c c-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;devpoll()&lt;/span&gt;&lt;/code&gt; available on
Solaris and derivatives, &lt;code class="xref c c-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;epoll()&lt;/span&gt;&lt;/code&gt; available on Linux 2.5+ and
&lt;code class="xref c c-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;kqueue()&lt;/span&gt;&lt;/code&gt; available on most BSD.
Note that on Windows, it only works for sockets; on other operating systems,
it also works for other file types (in particular, on Unix, it works on pipes).
It cannot be used on regular files to determine whether a file has grown since
it was last read.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</select>

<selectors rdf:about="#selectors1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</selectors>

<signal rdf:about="#signal1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides mechanisms to use signal handlers in Python.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</signal>

<mmap rdf:about="#mmap1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;Memory-mapped file objects behave like both &lt;a class="reference internal" href="stdtypes.html#bytearray" title="bytearray"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;bytearray&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and like
&lt;a class="reference internal" href="../glossary.html#term-file-object"&gt;&lt;span class="xref std std-term"&gt;file objects&lt;/span&gt;&lt;/a&gt;.  You can use mmap objects in most places
where &lt;a class="reference internal" href="stdtypes.html#bytearray" title="bytearray"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;bytearray&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; are expected; for example, you can use the &lt;a class="reference internal" href="re.html#module-re" title="re: Regular expression operations."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;re&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
module to search through a memory-mapped file.  You can also change a single
byte by doing &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;obj[index]&lt;/span&gt; &lt;span class="pre"&gt;=&lt;/span&gt; &lt;span class="pre"&gt;97&lt;/span&gt;&lt;/code&gt;, or change a subsequence by assigning to a
slice: &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;obj[i1:i2]&lt;/span&gt; &lt;span class="pre"&gt;=&lt;/span&gt; &lt;span class="pre"&gt;b'...'&lt;/span&gt;&lt;/code&gt;.  You can also read and write data starting at
the current file position, and &lt;code class="xref py py-meth docutils literal notranslate"&gt;&lt;span class="pre"&gt;seek()&lt;/span&gt;&lt;/code&gt; through the file to different positions.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</mmap>

<email rdf:about="#email1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-email" title="email: Package supporting the parsing, manipulating, and generating email messages."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;email&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; package is a library for managing email messages.  It is
specifically &lt;em&gt;not&lt;/em&gt; designed to do any sending of email messages to SMTP
(&lt;span class="target" id="index-0"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2821.html"&gt;&lt;strong&gt;RFC 2821&lt;/strong&gt;&lt;/a&gt;), NNTP, or other servers; those are functions of modules such as
&lt;a class="reference internal" href="smtplib.html#module-smtplib" title="smtplib: SMTP protocol client (requires sockets)."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;smtplib&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a class="reference internal" href="nntplib.html#module-nntplib" title="nntplib: NNTP protocol client (requires sockets). (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;nntplib&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.  The &lt;a class="reference internal" href="#module-email" title="email: Package supporting the parsing, manipulating, and generating email messages."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;email&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; package attempts to be as
RFC-compliant as possible, supporting &lt;span class="target" id="index-1"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc5322.html"&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; and &lt;span class="target" id="index-2"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc6532.html"&gt;&lt;strong&gt;RFC 6532&lt;/strong&gt;&lt;/a&gt;, as well as
such MIME-related RFCs as &lt;span class="target" id="index-3"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2045.html"&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;, &lt;span class="target" id="index-4"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2046.html"&gt;&lt;strong&gt;RFC 2046&lt;/strong&gt;&lt;/a&gt;, &lt;span class="target" id="index-5"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2047.html"&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;, &lt;span class="target" id="index-6"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2183.html"&gt;&lt;strong&gt;RFC 2183&lt;/strong&gt;&lt;/a&gt;,
and &lt;span class="target" id="index-7"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2231.html"&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</email>

<json rdf:about="#json1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;&lt;a class="reference external" href="https://json.org"&gt;JSON (JavaScript Object Notation)&lt;/a&gt;, specified by
&lt;span class="target" id="index-0"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc7159.html"&gt;&lt;strong&gt;RFC 7159&lt;/strong&gt;&lt;/a&gt; (which obsoletes &lt;span class="target" id="index-1"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc4627.html"&gt;&lt;strong&gt;RFC 4627&lt;/strong&gt;&lt;/a&gt;) and by
&lt;a class="reference external" href="https://www.ecma-international.org/publications-and-standards/standards/ecma-404/"&gt;ECMA-404&lt;/a&gt;,
is a lightweight data interchange format inspired by
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/JavaScript"&gt;JavaScript&lt;/a&gt; object literal syntax
(although it is not a strict subset of JavaScript &lt;a class="footnote-reference brackets" href="#rfc-errata" id="id1"&gt;1&lt;/a&gt; ).&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</json>

<mailbox rdf:about="#mailbox1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines two classes, &lt;a class="reference internal" href="#mailbox.Mailbox" title="mailbox.Mailbox"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Mailbox&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a class="reference internal" href="#mailbox.Message" title="mailbox.Message"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Message&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, for
accessing and manipulating on-disk mailboxes and the messages they contain.
&lt;a class="reference internal" href="#mailbox.Mailbox" title="mailbox.Mailbox"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Mailbox&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; offers a dictionary-like mapping from keys to messages.
&lt;a class="reference internal" href="#mailbox.Message" title="mailbox.Message"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Message&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; extends the &lt;a class="reference internal" href="email.message.html#module-email.message" title="email.message: The base class representing email messages."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;email.message&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module’s
&lt;a class="reference internal" href="email.compat32-message.html#email.message.Message" title="email.message.Message"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Message&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class with format-specific state and behavior.
Supported mailbox formats are Maildir, mbox, MH, Babyl, and MMDF.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</mailbox>

<mimetypes rdf:about="#mimetypes1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-mimetypes" title="mimetypes: Mapping of filename extensions to MIME types."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;mimetypes&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module converts between a filename or URL and the MIME type
associated with the filename extension.  Conversions are provided from filename
to MIME type and from MIME type to filename extension; encodings are not
supported for the latter conversion.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</mimetypes>

<base64 rdf:about="#base641">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides functions for encoding binary data to printable
ASCII characters and decoding such encodings back to binary data.
It provides encoding and decoding functions for the encodings specified in
&lt;span class="target" id="index-1"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc4648.html"&gt;&lt;strong&gt;RFC 4648&lt;/strong&gt;&lt;/a&gt;, which defines the Base16, Base32, and Base64 algorithms,
and for the de-facto standard Ascii85 and Base85 encodings.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</base64>

<binascii rdf:about="#binascii1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-binascii" title="binascii: Tools for converting between binary and various ASCII-encoded binary representations."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;binascii&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module contains a number of methods to convert between
binary and various ASCII-encoded binary representations. Normally, you will not
use these functions directly but use wrapper modules like &lt;a class="reference internal" href="uu.html#module-uu" title="uu: Encode and decode files in uuencode format. (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;uu&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; or
&lt;a class="reference internal" href="base64.html#module-base64" title="base64: RFC 4648: Base16, Base32, Base64 Data Encodings; Base85 and Ascii85"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;base64&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; instead. The &lt;a class="reference internal" href="#module-binascii" title="binascii: Tools for converting between binary and various ASCII-encoded binary representations."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;binascii&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module contains
low-level functions written in C for greater speed that are used by the
higher-level modules.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</binascii>

<quopri rdf:about="#quopri1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module performs quoted-printable transport encoding and decoding, as
defined in &lt;span class="target" id="index-1"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc1521.html"&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt;: “MIME (Multipurpose Internet Mail Extensions) Part One:
Mechanisms for Specifying and Describing the Format of Internet Message Bodies”.
The quoted-printable encoding is designed for data where there are relatively
few nonprintable characters; the base64 encoding scheme available via the
&lt;a class="reference internal" href="base64.html#module-base64" title="base64: RFC 4648: Base16, Base32, Base64 Data Encodings; Base85 and Ascii85"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;base64&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module is more compact if there are many such characters, as when
sending a graphics file.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</quopri>

<html rdf:about="#html1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines utilities to manipulate HTML.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</html>

<htmlparser rdf:about="#htmlparser1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines a class &lt;a class="reference internal" href="#html.parser.HTMLParser" title="html.parser.HTMLParser"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;HTMLParser&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; which serves as the basis for
parsing text files formatted in HTML (HyperText Mark-up Language) and XHTML.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</htmlparser>

<htmlentities rdf:about="#htmlentities1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines four dictionaries, &lt;a class="reference internal" href="#html.entities.html5" title="html.entities.html5"&gt;&lt;code class="xref py py-data docutils literal notranslate"&gt;&lt;span class="pre"&gt;html5&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;,
&lt;a class="reference internal" href="#html.entities.name2codepoint" title="html.entities.name2codepoint"&gt;&lt;code class="xref py py-data docutils literal notranslate"&gt;&lt;span class="pre"&gt;name2codepoint&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a class="reference internal" href="#html.entities.codepoint2name" title="html.entities.codepoint2name"&gt;&lt;code class="xref py py-data docutils literal notranslate"&gt;&lt;span class="pre"&gt;codepoint2name&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a class="reference internal" href="#html.entities.entitydefs" title="html.entities.entitydefs"&gt;&lt;code class="xref py py-data docutils literal notranslate"&gt;&lt;span class="pre"&gt;entitydefs&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</htmlentities>

<XML_Processing_Module rdf:about="#xml_processing_module1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;Python’s interfaces for processing XML are grouped in the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;xml&lt;/span&gt;&lt;/code&gt; package.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</XML_Processing_Module>

<xmletreeElementTree rdf:about="#xmletreeelementtree1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-xml.etree.ElementTree" title="xml.etree.ElementTree: Implementation of the ElementTree API."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;xml.etree.ElementTree&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module implements a simple and efficient API
for parsing and creating XML data.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</xmletreeElementTree>

<xmldom rdf:about="#xmldom1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The Document Object Model, or “DOM,” is a cross-language API from the World Wide
Web Consortium (W3C) for accessing and modifying XML documents.  A DOM
implementation presents an XML document as a tree structure, or allows client
code to build such a structure from scratch.  It then gives access to the
structure through a set of objects which provided well-known interfaces.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</xmldom>

<xmldomminidom rdf:about="#xmldomminidom1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;&lt;a class="reference internal" href="#module-xml.dom.minidom" title="xml.dom.minidom: Minimal Document Object Model (DOM) implementation."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;xml.dom.minidom&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is a minimal implementation of the Document Object
Model interface, with an API similar to that in other languages.  It is intended
to be simpler than the full DOM and also significantly smaller.  Users who are
not already proficient with the DOM should consider using the
&lt;a class="reference internal" href="xml.etree.elementtree.html#module-xml.etree.ElementTree" title="xml.etree.ElementTree: Implementation of the ElementTree API."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;xml.etree.ElementTree&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module for their XML processing instead.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</xmldomminidom>

<xmldompulldom rdf:about="#xmldompulldom1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-xml.dom.pulldom" title="xml.dom.pulldom: Support for building partial DOM trees from SAX events."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;xml.dom.pulldom&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a “pull parser” which can also be
asked to produce DOM-accessible fragments of the document where necessary. The
basic concept involves pulling “events” from a stream of incoming XML and
processing them. In contrast to SAX which also employs an event-driven
processing model together with callbacks, the user of a pull parser is
responsible for explicitly pulling events from the stream, looping over those
events until either processing is finished or an error condition occurs.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</xmldompulldom>

<xmlsax rdf:about="#xmlsax1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-xml.sax" title="xml.sax: Package containing SAX2 base classes and convenience functions."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;xml.sax&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; package provides a number of modules which implement the
Simple API for XML (SAX) interface for Python.  The package itself provides the
SAX exceptions and the convenience functions which will be most used by users of
the SAX API.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</xmlsax>

<xmlsaxhandler rdf:about="#xmlsaxhandler1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The SAX API defines five kinds of handlers: content handlers, DTD handlers,
error handlers, entity resolvers and lexical handlers. Applications normally
only need to implement those interfaces whose events they are interested in;
they can implement the interfaces in a single object or in multiple objects.
Handler implementations should inherit from the base classes provided in the
module &lt;a class="reference internal" href="#module-xml.sax.handler" title="xml.sax.handler: Base classes for SAX event handlers."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;xml.sax.handler&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, so that all methods get default implementations.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</xmlsaxhandler>

<xmlsaxsaxutils rdf:about="#xmlsaxsaxutils1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The module &lt;a class="reference internal" href="#module-xml.sax.saxutils" title="xml.sax.saxutils: Convenience functions and classes for use with SAX."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;xml.sax.saxutils&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; contains a number of classes and functions
that are commonly useful when creating SAX applications, either in direct use,
or as base classes.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</xmlsaxsaxutils>

<xmlsaxxmlreader rdf:about="#xmlsaxxmlreader1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;SAX parsers implement the &lt;a class="reference internal" href="#xml.sax.xmlreader.XMLReader" title="xml.sax.xmlreader.XMLReader"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;XMLReader&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; interface. They are implemented in
a Python module, which must provide a function &lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;create_parser()&lt;/span&gt;&lt;/code&gt;. This
function is invoked by  &lt;a class="reference internal" href="xml.sax.html#xml.sax.make_parser" title="xml.sax.make_parser"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;xml.sax.make_parser()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; with no arguments to create
a new  parser object.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</xmlsaxxmlreader>

<xmlparsersexpat rdf:about="#xmlparsersexpat1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p id="index-0"&gt;The &lt;a class="reference internal" href="#module-xml.parsers.expat" title="xml.parsers.expat: An interface to the Expat non-validating XML parser."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;xml.parsers.expat&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module is a Python interface to the Expat
non-validating XML parser. The module provides a single extension type,
&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;xmlparser&lt;/span&gt;&lt;/code&gt;, that represents the current state of an XML parser.  After
an &lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;xmlparser&lt;/span&gt;&lt;/code&gt; object has been created, various attributes of the object
can be set to handler functions.  When an XML document is then fed to the
parser, the handler functions are called for the character data and markup in
the XML document.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</xmlparsersexpat>

<webbrowser rdf:about="#webbrowser1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-webbrowser" title="webbrowser: Easy-to-use controller for web browsers."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;webbrowser&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a high-level interface to allow displaying
web-based documents to users. Under most circumstances, simply calling the
&lt;a class="reference internal" href="#webbrowser.open" title="webbrowser.open"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;open()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; function from this module will do the right thing.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</webbrowser>

<wsgiref rdf:about="#wsgiref1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The Web Server Gateway Interface (WSGI) is a standard interface between web
server software and web applications written in Python. Having a standard
interface makes it easy to use an application that supports WSGI with a number
of different web servers.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</wsgiref>

<urllib rdf:about="#urllib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;urllib&lt;/span&gt;&lt;/code&gt; is a package that collects several modules for working with URLs:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</urllib>

<urllibrequest rdf:about="#urllibrequest1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-urllib.request" title="urllib.request: Extensible library for opening URLs."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;urllib.request&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines functions and classes which help in
opening URLs (mostly HTTP) in a complex world — basic and digest
authentication, redirections, cookies and more.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</urllibrequest>

<urllibresponse rdf:about="#urllibresponse1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-urllib.request" title="urllib.request: Extensible library for opening URLs."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;urllib.request&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines functions and classes which help in
opening URLs (mostly HTTP) in a complex world — basic and digest
authentication, redirections, cookies and more.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</urllibresponse>

<urllibparse rdf:about="#urllibparse1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines a standard interface to break Uniform Resource Locator (URL)
strings up in components (addressing scheme, network location, path etc.), to
combine the components back into a URL string, and to convert a “relative URL”
to an absolute URL given a “base URL.”&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</urllibparse>

<urlliberror rdf:about="#urlliberror1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-urllib.error" title="urllib.error: Exception classes raised by urllib.request."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;urllib.error&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines the exception classes for exceptions
raised by &lt;a class="reference internal" href="urllib.request.html#module-urllib.request" title="urllib.request: Extensible library for opening URLs."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;urllib.request&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.  The base exception class is &lt;a class="reference internal" href="#urllib.error.URLError" title="urllib.error.URLError"&gt;&lt;code class="xref py py-exc docutils literal notranslate"&gt;&lt;span class="pre"&gt;URLError&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</urlliberror>

<urllibrobotparser rdf:about="#urllibrobotparser1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides a single class, &lt;a class="reference internal" href="#urllib.robotparser.RobotFileParser" title="urllib.robotparser.RobotFileParser"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;RobotFileParser&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, which answers
questions about whether or not a particular user agent can fetch a URL on the
web site that published the &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;robots.txt&lt;/span&gt;&lt;/code&gt; file.  For more details on the
structure of &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;robots.txt&lt;/span&gt;&lt;/code&gt; files, see &lt;a class="reference external" href="http://www.robotstxt.org/orig.html"&gt;http://www.robotstxt.org/orig.html&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</urllibrobotparser>

<http rdf:about="#http1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;&lt;a class="reference internal" href="#module-http" title="http: HTTP status codes and messages"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;http&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is a package that collects several modules for working with the
HyperText Transfer Protocol:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</http>

<httpclient rdf:about="#httpclient1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines classes that implement the client side of the HTTP and
HTTPS protocols.  It is normally not used directly — the module
&lt;a class="reference internal" href="urllib.request.html#module-urllib.request" title="urllib.request: Extensible library for opening URLs."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;urllib.request&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; uses it to handle URLs that use HTTP and HTTPS.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</httpclient>

<ftplib rdf:about="#ftplib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines the class &lt;a class="reference internal" href="#ftplib.FTP" title="ftplib.FTP"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;FTP&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and a few related items. The
&lt;a class="reference internal" href="#ftplib.FTP" title="ftplib.FTP"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;FTP&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class implements the client side of the FTP protocol.  You can use
this to write Python programs that perform a variety of automated FTP jobs, such
as mirroring other FTP servers.  It is also used by the module
&lt;a class="reference internal" href="urllib.request.html#module-urllib.request" title="urllib.request: Extensible library for opening URLs."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;urllib.request&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; to handle URLs that use FTP.  For more information on FTP
(File Transfer Protocol), see internet &lt;span class="target" id="index-1"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc959.html"&gt;&lt;strong&gt;RFC 959&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</ftplib>

<poplib rdf:about="#poplib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines a class, &lt;a class="reference internal" href="#poplib.POP3" title="poplib.POP3"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;POP3&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, which encapsulates a connection to a
POP3 server and implements the protocol as defined in &lt;span class="target" id="index-1"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc1939.html"&gt;&lt;strong&gt;RFC 1939&lt;/strong&gt;&lt;/a&gt;. The
&lt;a class="reference internal" href="#poplib.POP3" title="poplib.POP3"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;POP3&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class supports both the minimal and optional command sets from
&lt;span class="target" id="index-2"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc1939.html"&gt;&lt;strong&gt;RFC 1939&lt;/strong&gt;&lt;/a&gt;. The &lt;a class="reference internal" href="#poplib.POP3" title="poplib.POP3"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;POP3&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class also supports the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;STLS&lt;/span&gt;&lt;/code&gt; command introduced
in &lt;span class="target" id="index-3"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2595.html"&gt;&lt;strong&gt;RFC 2595&lt;/strong&gt;&lt;/a&gt; to enable encrypted communication on an already established connection.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</poplib>

<imaplib rdf:about="#imaplib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines three classes, &lt;a class="reference internal" href="#imaplib.IMAP4" title="imaplib.IMAP4"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;IMAP4&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a class="reference internal" href="#imaplib.IMAP4_SSL" title="imaplib.IMAP4_SSL"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;IMAP4_SSL&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and
&lt;a class="reference internal" href="#imaplib.IMAP4_stream" title="imaplib.IMAP4_stream"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;IMAP4_stream&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, which encapsulate a connection to an IMAP4 server and
implement a large subset of the IMAP4rev1 client protocol as defined in
&lt;span class="target" id="index-1"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2060.html"&gt;&lt;strong&gt;RFC 2060&lt;/strong&gt;&lt;/a&gt;. It is backward compatible with IMAP4 (&lt;span class="target" id="index-2"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc1730.html"&gt;&lt;strong&gt;RFC 1730&lt;/strong&gt;&lt;/a&gt;) servers, but
note that the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;STATUS&lt;/span&gt;&lt;/code&gt; command is not supported in IMAP4.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</imaplib>

<smtplib rdf:about="#smtplib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-smtplib" title="smtplib: SMTP protocol client (requires sockets)."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;smtplib&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines an SMTP client session object that can be used
to send mail to any internet machine with an SMTP or ESMTP listener daemon.  For
details of SMTP and ESMTP operation, consult &lt;span class="target" id="index-1"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc821.html"&gt;&lt;strong&gt;RFC 821&lt;/strong&gt;&lt;/a&gt; (Simple Mail Transfer
Protocol) and &lt;span class="target" id="index-2"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc1869.html"&gt;&lt;strong&gt;RFC 1869&lt;/strong&gt;&lt;/a&gt; (SMTP Service Extensions).&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</smtplib>

<uuid rdf:about="#uuid1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides immutable &lt;a class="reference internal" href="#uuid.UUID" title="uuid.UUID"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;UUID&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; objects (the &lt;a class="reference internal" href="#uuid.UUID" title="uuid.UUID"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;UUID&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class)
and the functions &lt;a class="reference internal" href="#uuid.uuid1" title="uuid.uuid1"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;uuid1()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a class="reference internal" href="#uuid.uuid3" title="uuid.uuid3"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;uuid3()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a class="reference internal" href="#uuid.uuid4" title="uuid.uuid4"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;uuid4()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a class="reference internal" href="#uuid.uuid5" title="uuid.uuid5"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;uuid5()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; for
generating version 1, 3, 4, and 5 UUIDs as specified in &lt;span class="target" id="index-1"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc4122.html"&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</uuid>

<socketserver rdf:about="#socketserver1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-socketserver" title="socketserver: A framework for network servers."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;socketserver&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module simplifies the task of writing network servers.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</socketserver>

<httpserver rdf:about="#httpserver1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines classes for implementing HTTP servers.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</httpserver>

<httpcookies rdf:about="#httpcookies1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-http.cookies" title="http.cookies: Support for HTTP state management (cookies)."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;http.cookies&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines classes for abstracting the concept of
cookies, an HTTP state management mechanism. It supports both simple string-only
cookies, and provides an abstraction for having any serializable data-type as
cookie value.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</httpcookies>

<httpcookiejar rdf:about="#httpcookiejar1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-http.cookiejar" title="http.cookiejar: Classes for automatic handling of HTTP cookies."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;http.cookiejar&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines classes for automatic handling of HTTP
cookies.  It is useful for accessing web sites that require small pieces of data
– &lt;em class="dfn"&gt;cookies&lt;/em&gt; – to be set on the client machine by an HTTP response from a
web server, and then returned to the server in later HTTP requests.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</httpcookiejar>

<xmlrpc rdf:about="#xmlrpc1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</xmlrpc>

<xmlrpcclient rdf:about="#xmlrpcclient1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;XML-RPC is a Remote Procedure Call method that uses XML passed via HTTP(S) as a
transport.  With it, a client can call methods with parameters on a remote
server (the server is named by a URI) and get back structured data.  This module
supports writing XML-RPC client code; it handles all the details of translating
between conformable Python objects and XML on the wire.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</xmlrpcclient>

<xmlrpcserver rdf:about="#xmlrpcserver1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-xmlrpc.server" title="xmlrpc.server: Basic XML-RPC server implementations."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;xmlrpc.server&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a basic server framework for XML-RPC
servers written in Python.  Servers can either be free standing, using
&lt;a class="reference internal" href="#xmlrpc.server.SimpleXMLRPCServer" title="xmlrpc.server.SimpleXMLRPCServer"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;SimpleXMLRPCServer&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, or embedded in a CGI environment, using
&lt;a class="reference internal" href="#xmlrpc.server.CGIXMLRPCRequestHandler" title="xmlrpc.server.CGIXMLRPCRequestHandler"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;CGIXMLRPCRequestHandler&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</xmlrpcserver>

<ipaddress rdf:about="#ipaddress1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;&lt;a class="reference internal" href="#module-ipaddress" title="ipaddress: IPv4/IPv6 manipulation library."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;ipaddress&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; provides the capabilities to create, manipulate and
operate on IPv4 and IPv6 addresses and networks.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</ipaddress>

<wave rdf:about="#wave1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-wave" title="wave: Provide an interface to the WAV sound format."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;wave&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a convenient interface to the WAV sound format.
Only files using &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;WAVE_FORMAT_PCM&lt;/span&gt;&lt;/code&gt; are supported. Note that this does not
include files using &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;WAVE_FORMAT_EXTENSIBLE&lt;/span&gt;&lt;/code&gt; even if the subformat is PCM.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</wave>

<colorsys rdf:about="#colorsys1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-colorsys" title="colorsys: Conversion functions between RGB and other color systems."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;colorsys&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines bidirectional conversions of color values
between colors expressed in the RGB (Red Green Blue) color space used in
computer monitors and three other coordinate systems: YIQ, HLS (Hue Lightness
Saturation) and HSV (Hue Saturation Value).  Coordinates in all of these color
spaces are floating point values.  In the YIQ space, the Y coordinate is between
0 and 1, but the I and Q coordinates can be positive or negative.  In all other
spaces, the coordinates are all between 0 and 1.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</colorsys>

<gettext rdf:about="#gettext1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-gettext" title="gettext: Multilingual internationalization services."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;gettext&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides internationalization (I18N) and localization
(L10N) services for your Python modules and applications. It supports both the
GNU &lt;strong class="program"&gt;gettext&lt;/strong&gt; message catalog API and a higher level, class-based API that may
be more appropriate for Python files.  The interface described below allows you
to write your module and application messages in one natural language, and
provide a catalog of translated messages for running under different natural
languages.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</gettext>

<locale rdf:about="#locale1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-locale" title="locale: Internationalization services."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;locale&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module opens access to the POSIX locale database and
functionality. The POSIX locale mechanism allows programmers to deal with
certain cultural issues in an application, without requiring the programmer to
know all the specifics of each country where the software is executed.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</locale>

<turtle rdf:about="#turtle1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</turtle>

<cmd rdf:about="#cmd1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#cmd.Cmd" title="cmd.Cmd"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Cmd&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class provides a simple framework for writing line-oriented
command interpreters.  These are often useful for test harnesses, administrative
tools, and prototypes that will later be wrapped in a more sophisticated
interface.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</cmd>

<shlex rdf:about="#shlex1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#shlex.shlex" title="shlex.shlex"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;shlex&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class makes it easy to write lexical analyzers for
simple syntaxes resembling that of the Unix shell.  This will often be useful
for writing minilanguages, (for example, in run control files for Python
applications) or for parsing quoted strings.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</shlex>

<tkinter rdf:about="#tkinter1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-tkinter" title="tkinter: Interface to Tcl/Tk for graphical user interfaces"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tkinter&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; package (“Tk interface”) is the standard Python interface to
the Tcl/Tk GUI toolkit.  Both Tk and &lt;a class="reference internal" href="#module-tkinter" title="tkinter: Interface to Tcl/Tk for graphical user interfaces"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tkinter&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; are available on most Unix
platforms, including macOS, as well as on Windows systems.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tkinter>

<tkintercolorchooser rdf:about="#tkintercolorchooser1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-tkinter.colorchooser" title="tkinter.colorchooser: Color choosing dialog (Tk)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tkinter.colorchooser&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides the &lt;a class="reference internal" href="#tkinter.colorchooser.Chooser" title="tkinter.colorchooser.Chooser"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Chooser&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class
as an interface to the native color picker dialog. &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Chooser&lt;/span&gt;&lt;/code&gt; implements
a modal color choosing dialog window. The &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Chooser&lt;/span&gt;&lt;/code&gt; class inherits from
the &lt;a class="reference internal" href="dialog.html#tkinter.commondialog.Dialog" title="tkinter.commondialog.Dialog"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Dialog&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tkintercolorchooser>

<tkinterfont rdf:about="#tkinterfont1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-tkinter.font" title="tkinter.font: Tkinter font-wrapping class (Tk)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tkinter.font&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides the &lt;a class="reference internal" href="#tkinter.font.Font" title="tkinter.font.Font"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Font&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class for creating
and using named fonts.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tkinterfont>

<Tkinter_Dialog rdf:about="#tkinter_dialog1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-tkinter.simpledialog" title="tkinter.simpledialog: Simple dialog windows (Tk)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tkinter.simpledialog&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module contains convenience classes and
functions for creating simple modal dialogs to get a value from the user.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</Tkinter_Dialog>

<tkintermessagebox rdf:about="#tkintermessagebox1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-tkinter.messagebox" title="tkinter.messagebox: Various types of alert dialogs (Tk)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tkinter.messagebox&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a template base class as well as
a variety of convenience methods for commonly used configurations. The message
boxes are modal and will return a subset of (True, False, OK, None, Yes, No) based on
the user’s selection. Common message box styles and layouts include but are not
limited to:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tkintermessagebox>

<tkinterscrolledtext rdf:about="#tkinterscrolledtext1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-tkinter.scrolledtext" title="tkinter.scrolledtext: Text widget with a vertical scroll bar. (Tk)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tkinter.scrolledtext&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a class of the same name which
implements a basic text widget which has a vertical scroll bar configured to do
the “right thing.”  Using the &lt;a class="reference internal" href="#tkinter.scrolledtext.ScrolledText" title="tkinter.scrolledtext.ScrolledText"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;ScrolledText&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class is a lot easier than
setting up a text widget and scroll bar directly.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tkinterscrolledtext>

<tkinterdnd rdf:about="#tkinterdnd1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-tkinter.dnd" title="tkinter.dnd: Tkinter drag-and-drop interface (Tk)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tkinter.dnd&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides drag-and-drop support for objects within
a single application, within the same window or between windows. To enable an
object to be dragged, you must create an event binding for it that starts the
drag-and-drop process. Typically, you bind a ButtonPress event to a callback
function that you write (see &lt;a class="reference internal" href="tkinter.html#bindings-and-events"&gt;&lt;span class="std std-ref"&gt;Bindings and Events&lt;/span&gt;&lt;/a&gt;). The function should
call &lt;a class="reference internal" href="#tkinter.dnd.dnd_start" title="tkinter.dnd.dnd_start"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;dnd_start()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, where ‘source’ is the object to be dragged, and ‘event’
is the event that invoked the call (the argument to your callback function).&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tkinterdnd>

<tkinterttk rdf:about="#tkinterttk1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-tkinter.ttk" title="tkinter.ttk: Tk themed widget set"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tkinter.ttk&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides access to the Tk themed widget set,
introduced in Tk 8.5. It provides additional benefits including anti-aliased font
rendering under X11 and window transparency (requiring a composition
window manager on X11).&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tkinterttk>

<tkintertix rdf:about="#tkintertix1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-tkinter.tix" title="tkinter.tix: Tk Extension Widgets for Tkinter"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tkinter.tix&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; (Tk Interface Extension) module provides an additional
rich set of widgets. Although the standard Tk library has many useful widgets,
they are far from complete. The &lt;a class="reference internal" href="#module-tkinter.tix" title="tkinter.tix: Tk Extension Widgets for Tkinter"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tkinter.tix&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; library provides most of the
commonly needed widgets that are missing from standard Tk: &lt;a class="reference internal" href="#tkinter.tix.HList" title="tkinter.tix.HList"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;HList&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;,
&lt;a class="reference internal" href="#tkinter.tix.ComboBox" title="tkinter.tix.ComboBox"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;ComboBox&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a class="reference internal" href="#tkinter.tix.Control" title="tkinter.tix.Control"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Control&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; (a.k.a. SpinBox) and an assortment of
scrollable widgets.
&lt;a class="reference internal" href="#module-tkinter.tix" title="tkinter.tix: Tk Extension Widgets for Tkinter"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tkinter.tix&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; also includes many more widgets that are generally useful in
a wide range of applications: &lt;a class="reference internal" href="#tkinter.tix.NoteBook" title="tkinter.tix.NoteBook"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;NoteBook&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a class="reference internal" href="#tkinter.tix.FileEntry" title="tkinter.tix.FileEntry"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;FileEntry&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;,
&lt;a class="reference internal" href="#tkinter.tix.PanedWindow" title="tkinter.tix.PanedWindow"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;PanedWindow&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, etc; there are more than 40 of them.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tkintertix>

<IDL rdf:about="#idl1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;IDLE is Python’s Integrated Development and Learning Environment.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</IDL>

<typing rdf:about="#typing1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides runtime support for type hints. The most fundamental
support consists of the types &lt;a class="reference internal" href="#typing.Any" title="typing.Any"&gt;&lt;code class="xref py py-data docutils literal notranslate"&gt;&lt;span class="pre"&gt;Any&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a class="reference internal" href="#typing.Union" title="typing.Union"&gt;&lt;code class="xref py py-data docutils literal notranslate"&gt;&lt;span class="pre"&gt;Union&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a class="reference internal" href="#typing.Callable" title="typing.Callable"&gt;&lt;code class="xref py py-data docutils literal notranslate"&gt;&lt;span class="pre"&gt;Callable&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;,
&lt;a class="reference internal" href="#typing.TypeVar" title="typing.TypeVar"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;TypeVar&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a class="reference internal" href="#typing.Generic" title="typing.Generic"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Generic&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. For a specification, please see
&lt;span class="target" id="index-0"&gt;&lt;/span&gt;&lt;a class="pep reference external" href="https://peps.python.org/pep-0484/"&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;. For a simplified introduction to type hints, see &lt;span class="target" id="index-1"&gt;&lt;/span&gt;&lt;a class="pep reference external" href="https://peps.python.org/pep-0483/"&gt;&lt;strong&gt;PEP 483&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</typing>

<pydoc rdf:about="#pydoc1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-pydoc" title="pydoc: Documentation generator and online help system."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;pydoc&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module automatically generates documentation from Python
modules.  The documentation can be presented as pages of text on the console,
served to a web browser, or saved to HTML files.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</pydoc>

<Python_Development_Mod rdf:about="#python_development_mod1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</Python_Development_Mod>

<Effects_of_the_Python_Development_Mod rdf:about="#effects_of_the_python_development_mod1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</Effects_of_the_Python_Development_Mod>

<ResourceWarning_Exampl rdf:about="#resourcewarning_exampl1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</ResourceWarning_Exampl>

<Bad_file_descriptor_error_exampl rdf:about="#bad_file_descriptor_error_exampl1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</Bad_file_descriptor_error_exampl>

<doctest rdf:about="#doctest1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-doctest" title="doctest: Test pieces of code within docstrings."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;doctest&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module searches for pieces of text that look like interactive
Python sessions, and then executes those sessions to verify that they work
exactly as shown.  There are several common ways to use doctest:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</doctest>

<unittest rdf:about="#unittest1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;(If you are already familiar with the basic concepts of testing, you might want
to skip to &lt;a class="reference internal" href="#assert-methods"&gt;&lt;span class="std std-ref"&gt;the list of assert methods&lt;/span&gt;&lt;/a&gt;.)&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</unittest>

<unittestmock rdf:about="#unittestmock1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;&lt;a class="reference internal" href="#module-unittest.mock" title="unittest.mock: Mock object library."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;unittest.mock&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is a library for testing in Python. It allows you to
replace parts of your system under test with mock objects and make assertions
about how they have been used.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</unittestmock>

<unittestmock rdf:about="#unittestmock2">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</unittestmock>

<rdf:Description rdf:about="#2to31">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <rdf:type rdf:resource="#2to3"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</rdf:Description>

<test rdf:about="#test1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-test" title="test: Regression tests package containing the testing suite for Python."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; package contains all regression tests for Python as well as the
modules &lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt;.
&lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is used to enhance your tests while
&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt; drives the testing suite.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</test>

<testsupport rdf:about="#testsupport1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-test" title="test: Regression tests package containing the testing suite for Python."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; package contains all regression tests for Python as well as the
modules &lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt;.
&lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is used to enhance your tests while
&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt; drives the testing suite.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</testsupport>

<testsupportsocket_helper rdf:about="#testsupportsocket_helper1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-test" title="test: Regression tests package containing the testing suite for Python."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; package contains all regression tests for Python as well as the
modules &lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt;.
&lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is used to enhance your tests while
&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt; drives the testing suite.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</testsupportsocket_helper>

<testsupportscript_helper rdf:about="#testsupportscript_helper1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-test" title="test: Regression tests package containing the testing suite for Python."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; package contains all regression tests for Python as well as the
modules &lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt;.
&lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is used to enhance your tests while
&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt; drives the testing suite.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</testsupportscript_helper>

<testsupportbytecode_helper rdf:about="#testsupportbytecode_helper1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-test" title="test: Regression tests package containing the testing suite for Python."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; package contains all regression tests for Python as well as the
modules &lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt;.
&lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is used to enhance your tests while
&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt; drives the testing suite.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</testsupportbytecode_helper>

<testsupportthreading_helper rdf:about="#testsupportthreading_helper1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-test" title="test: Regression tests package containing the testing suite for Python."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; package contains all regression tests for Python as well as the
modules &lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt;.
&lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is used to enhance your tests while
&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt; drives the testing suite.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</testsupportthreading_helper>

<testsupportos_helper rdf:about="#testsupportos_helper1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-test" title="test: Regression tests package containing the testing suite for Python."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; package contains all regression tests for Python as well as the
modules &lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt;.
&lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is used to enhance your tests while
&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt; drives the testing suite.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</testsupportos_helper>

<testsupportimport_helper rdf:about="#testsupportimport_helper1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-test" title="test: Regression tests package containing the testing suite for Python."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; package contains all regression tests for Python as well as the
modules &lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt;.
&lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is used to enhance your tests while
&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt; drives the testing suite.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</testsupportimport_helper>

<testsupportwarnings_helper rdf:about="#testsupportwarnings_helper1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-test" title="test: Regression tests package containing the testing suite for Python."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; package contains all regression tests for Python as well as the
modules &lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt;.
&lt;a class="reference internal" href="#module-test.support" title="test.support: Support for Python's regression test suite."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.support&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is used to enhance your tests while
&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;test.regrtest&lt;/span&gt;&lt;/code&gt; drives the testing suite.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</testsupportwarnings_helper>

<Audit_events_tabl rdf:about="#audit_events_tabl1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</Audit_events_tabl>

<bdb rdf:about="#bdb1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-bdb" title="bdb: Debugger framework."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;bdb&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module handles basic debugger functions, like setting breakpoints
or managing execution via the debugger.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</bdb>

<faulthandler rdf:about="#faulthandler1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module contains functions to dump Python tracebacks explicitly, on a fault,
after a timeout, or on a user signal. Call &lt;a class="reference internal" href="#faulthandler.enable" title="faulthandler.enable"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;faulthandler.enable()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; to
install fault handlers for the &lt;code class="xref py py-const docutils literal notranslate"&gt;&lt;span class="pre"&gt;SIGSEGV&lt;/span&gt;&lt;/code&gt;, &lt;code class="xref py py-const docutils literal notranslate"&gt;&lt;span class="pre"&gt;SIGFPE&lt;/span&gt;&lt;/code&gt;,
&lt;code class="xref py py-const docutils literal notranslate"&gt;&lt;span class="pre"&gt;SIGABRT&lt;/span&gt;&lt;/code&gt;, &lt;code class="xref py py-const docutils literal notranslate"&gt;&lt;span class="pre"&gt;SIGBUS&lt;/span&gt;&lt;/code&gt;, and &lt;code class="xref py py-const docutils literal notranslate"&gt;&lt;span class="pre"&gt;SIGILL&lt;/span&gt;&lt;/code&gt; signals. You can also
enable them at startup by setting the &lt;span class="target" id="index-0"&gt;&lt;/span&gt;&lt;a class="reference internal" href="../using/cmdline.html#envvar-PYTHONFAULTHANDLER"&gt;&lt;code class="xref std std-envvar docutils literal notranslate"&gt;&lt;span class="pre"&gt;PYTHONFAULTHANDLER&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; environment
variable or by using the &lt;a class="reference internal" href="../using/cmdline.html#cmdoption-X"&gt;&lt;code class="xref std std-option docutils literal notranslate"&gt;&lt;span class="pre"&gt;-X&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;faulthandler&lt;/span&gt;&lt;/code&gt; command line option.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</faulthandler>

<pdb rdf:about="#pdb1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The module &lt;a class="reference internal" href="#module-pdb" title="pdb: The Python debugger for interactive interpreters."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;pdb&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; defines an interactive source code debugger for Python
programs.  It supports setting (conditional) breakpoints and single stepping at
the source line level, inspection of stack frames, source code listing, and
evaluation of arbitrary Python code in the context of any stack frame.  It also
supports post-mortem debugging and can be called under program control.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</pdb>

<The_Python_Profiler rdf:about="#the_python_profiler1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</The_Python_Profiler>

<timeit rdf:about="#timeit1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides a simple way to time small bits of Python code. It has both
a &lt;a class="reference internal" href="#timeit-command-line-interface"&gt;&lt;span class="std std-ref"&gt;Command-Line Interface&lt;/span&gt;&lt;/a&gt; as well as a &lt;a class="reference internal" href="#python-interface"&gt;&lt;span class="std std-ref"&gt;callable&lt;/span&gt;&lt;/a&gt;
one.  It avoids a number of common traps for measuring execution times.
See also Tim Peters’ introduction to the “Algorithms” chapter in the second
edition of &lt;em&gt;Python Cookbook&lt;/em&gt;, published by O’Reilly.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</timeit>

<trace rdf:about="#trace1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-trace" title="trace: Trace or track Python statement execution."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;trace&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module allows you to trace program execution, generate
annotated statement coverage listings, print caller/callee relationships and
list functions executed during a program run.  It can be used in another program
or from the command line.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</trace>

<tracemalloc rdf:about="#tracemalloc1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The tracemalloc module is a debug tool to trace memory blocks allocated by
Python. It provides the following information:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tracemalloc>

<distutils rdf:about="#distutils1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;&lt;a class="reference internal" href="#module-distutils" title="distutils: Support for building and installing Python modules into an existing Python installation."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;distutils&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is deprecated with removal planned for Python 3.12.
See the &lt;a class="reference internal" href="../whatsnew/3.10.html#distutils-deprecated"&gt;&lt;span class="std std-ref"&gt;What’s New&lt;/span&gt;&lt;/a&gt; entry for more information.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</distutils>

<ensurepip rdf:about="#ensurepip1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-ensurepip" title='ensurepip: Bootstrapping the "pip" installer into an existing Python installation or virtual environment.'&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;ensurepip&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; package provides support for bootstrapping the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;pip&lt;/span&gt;&lt;/code&gt;
installer into an existing Python installation or virtual environment. This
bootstrapping approach reflects the fact that &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;pip&lt;/span&gt;&lt;/code&gt; is an independent
project with its own release cycle, and the latest available stable version
is bundled with maintenance and feature releases of the CPython reference
interpreter.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</ensurepip>

<venv rdf:about="#venv1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p id="venv-intro"&gt;&lt;span id="venv-def"&gt;&lt;/span&gt;The &lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;venv&lt;/span&gt;&lt;/code&gt; module supports creating lightweight “virtual environments”,
each with their own independent set of Python packages installed in
their &lt;a class="reference internal" href="site.html#module-site" title="site: Module responsible for site-specific configuration."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;site&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; directories.
A virtual environment is created on top of an existing
Python installation, known as the virtual environment’s “base” Python, and may
optionally be isolated from the packages in the base environment,
so only those explicitly installed in the virtual environment are available.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</venv>

<zipapp rdf:about="#zipapp1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides tools to manage the creation of zip files containing
Python code, which can be  &lt;a class="reference internal" href="../using/cmdline.html#using-on-interface-options"&gt;&lt;span class="std std-ref"&gt;executed directly by the Python interpreter&lt;/span&gt;&lt;/a&gt;.  The module provides both a
&lt;a class="reference internal" href="#zipapp-command-line-interface"&gt;&lt;span class="std std-ref"&gt;Command-Line Interface&lt;/span&gt;&lt;/a&gt; and a &lt;a class="reference internal" href="#zipapp-python-api"&gt;&lt;span class="std std-ref"&gt;Python API&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</zipapp>

<sys rdf:about="#sys1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides access to some variables used or maintained by the
interpreter and to functions that interact strongly with the interpreter. It is
always available.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</sys>

<sysconfig rdf:about="#sysconfig1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-sysconfig" title="sysconfig: Python's configuration information"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;sysconfig&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides access to Python’s configuration
information like the list of installation paths and the configuration variables
relevant for the current platform.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</sysconfig>

<builtins rdf:about="#builtins1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides direct access to all ‘built-in’ identifiers of Python; for
example, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;builtins.open&lt;/span&gt;&lt;/code&gt; is the full name for the built-in function
&lt;a class="reference internal" href="functions.html#open" title="open"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;open()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.  See &lt;a class="reference internal" href="functions.html#built-in-funcs"&gt;&lt;span class="std std-ref"&gt;Built-in Functions&lt;/span&gt;&lt;/a&gt; and &lt;a class="reference internal" href="constants.html#built-in-consts"&gt;&lt;span class="std std-ref"&gt;Built-in Constants&lt;/span&gt;&lt;/a&gt; for
documentation.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</builtins>

<rdf:Description rdf:about="#__main__1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <rdf:type rdf:resource="#__main__"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;In Python, the special name &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;__main__&lt;/span&gt;&lt;/code&gt; is used for two important constructs:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</rdf:Description>

<warnings rdf:about="#warnings1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;Warning messages are typically issued in situations where it is useful to alert
the user of some condition in a program, where that condition (normally) doesn’t
warrant raising an exception and terminating the program.  For example, one
might want to issue a warning when a program uses an obsolete module.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</warnings>

<dataclasses rdf:about="#dataclasses1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides a decorator and functions for automatically
adding generated &lt;a class="reference internal" href="../glossary.html#term-special-method"&gt;&lt;span class="xref std std-term"&gt;special method&lt;/span&gt;&lt;/a&gt;s such as &lt;a class="reference internal" href="../reference/datamodel.html#object.__init__" title="object.__init__"&gt;&lt;code class="xref py py-meth docutils literal notranslate"&gt;&lt;span class="pre"&gt;__init__()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and
&lt;a class="reference internal" href="../reference/datamodel.html#object.__repr__" title="object.__repr__"&gt;&lt;code class="xref py py-meth docutils literal notranslate"&gt;&lt;span class="pre"&gt;__repr__()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; to user-defined classes.  It was originally described
in &lt;span class="target" id="index-0"&gt;&lt;/span&gt;&lt;a class="pep reference external" href="https://peps.python.org/pep-0557/"&gt;&lt;strong&gt;PEP 557&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</dataclasses>

<contextlib rdf:about="#contextlib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides utilities for common tasks involving the &lt;a class="reference internal" href="../reference/compound_stmts.html#with"&gt;&lt;code class="xref std std-keyword docutils literal notranslate"&gt;&lt;span class="pre"&gt;with&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
statement. For more information see also &lt;a class="reference internal" href="stdtypes.html#typecontextmanager"&gt;&lt;span class="std std-ref"&gt;Context Manager Types&lt;/span&gt;&lt;/a&gt; and
&lt;a class="reference internal" href="../reference/datamodel.html#context-managers"&gt;&lt;span class="std std-ref"&gt;With Statement Context Managers&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</contextlib>

<abc rdf:about="#abc1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides the infrastructure for defining &lt;a class="reference internal" href="../glossary.html#term-abstract-base-class"&gt;&lt;span class="xref std std-term"&gt;abstract base
classes&lt;/span&gt;&lt;/a&gt; (ABCs) in Python, as outlined in &lt;span class="target" id="index-0"&gt;&lt;/span&gt;&lt;a class="pep reference external" href="https://peps.python.org/pep-3119/"&gt;&lt;strong&gt;PEP 3119&lt;/strong&gt;&lt;/a&gt;;
see the PEP for why this was added to Python. (See also &lt;span class="target" id="index-1"&gt;&lt;/span&gt;&lt;a class="pep reference external" href="https://peps.python.org/pep-3141/"&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt; and the
&lt;a class="reference internal" href="numbers.html#module-numbers" title="numbers: Numeric abstract base classes (Complex, Real, Integral, etc.)."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;numbers&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module regarding a type hierarchy for numbers based on ABCs.)&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</abc>

<atexit rdf:about="#atexit1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-atexit" title="atexit: Register and execute cleanup functions."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;atexit&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines functions to register and unregister cleanup
functions.  Functions thus registered are automatically executed upon normal
interpreter termination.  &lt;a class="reference internal" href="#module-atexit" title="atexit: Register and execute cleanup functions."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;atexit&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; runs these functions in the &lt;em&gt;reverse&lt;/em&gt;
order in which they were registered; if you register &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;A&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;B&lt;/span&gt;&lt;/code&gt;, and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;C&lt;/span&gt;&lt;/code&gt;,
at interpreter termination time they will be run in the order &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;C&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;B&lt;/span&gt;&lt;/code&gt;,
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;A&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</atexit>

<traceback rdf:about="#traceback1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides a standard interface to extract, format and print stack
traces of Python programs.  It exactly mimics the behavior of the Python
interpreter when it prints a stack trace.  This is useful when you want to print
stack traces under program control, such as in a “wrapper” around the
interpreter.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</traceback>

<rdf:Description rdf:about="#__future__1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <rdf:type rdf:resource="#__future__"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;&lt;a class="reference internal" href="#module-__future__" title="__future__: Future statement definitions"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;__future__&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is a real module, and serves three purposes:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</rdf:Description>

<gc rdf:about="#gc1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides an interface to the optional garbage collector.  It
provides the ability to disable the collector, tune the collection frequency,
and set debugging options.  It also provides access to unreachable objects that
the collector found but cannot free.  Since the collector supplements the
reference counting already used in Python, you can disable the collector if you
are sure your program does not create reference cycles.  Automatic collection
can be disabled by calling &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;gc.disable()&lt;/span&gt;&lt;/code&gt;.  To debug a leaking program call
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;gc.set_debug(gc.DEBUG_LEAK)&lt;/span&gt;&lt;/code&gt;. Notice that this includes
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;gc.DEBUG_SAVEALL&lt;/span&gt;&lt;/code&gt;, causing garbage-collected objects to be saved in
gc.garbage for inspection.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</gc>

<inspect rdf:about="#inspect1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-inspect" title="inspect: Extract information and source code from live objects."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;inspect&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides several useful functions to help get
information about live objects such as modules, classes, methods, functions,
tracebacks, frame objects, and code objects.  For example, it can help you
examine the contents of a class, retrieve the source code of a method, extract
and format the argument list for a function, or get all the information you need
to display a detailed traceback.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</inspect>

<site rdf:about="#site1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;&lt;strong&gt;This module is automatically imported during initialization.&lt;/strong&gt; The automatic
import can be suppressed using the interpreter’s &lt;a class="reference internal" href="../using/cmdline.html#cmdoption-S"&gt;&lt;code class="xref std std-option docutils literal notranslate"&gt;&lt;span class="pre"&gt;-S&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; option.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</site>

<code rdf:about="#code1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;code&lt;/span&gt;&lt;/code&gt; module provides facilities to implement read-eval-print loops in
Python.  Two classes and convenience functions are included which can be used to
build applications which provide an interactive interpreter prompt.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</code>

<codeop rdf:about="#codeop1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-codeop" title="codeop: Compile (possibly incomplete) Python code."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;codeop&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides utilities upon which the Python
read-eval-print loop can be emulated, as is done in the &lt;a class="reference internal" href="code.html#module-code" title="code: Facilities to implement read-eval-print loops."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;code&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module.  As
a result, you probably don’t want to use the module directly; if you want to
include such a loop in your program you probably want to use the &lt;a class="reference internal" href="code.html#module-code" title="code: Facilities to implement read-eval-print loops."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;code&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
module instead.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</codeop>

<zipimport rdf:about="#zipimport1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module adds the ability to import Python modules (&lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;*.py&lt;/span&gt;&lt;/code&gt;,
&lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;*.pyc&lt;/span&gt;&lt;/code&gt;) and packages from ZIP-format archives. It is usually not
needed to use the &lt;a class="reference internal" href="#module-zipimport" title="zipimport: Support for importing Python modules from ZIP archives."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;zipimport&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module explicitly; it is automatically used
by the built-in &lt;a class="reference internal" href="../reference/simple_stmts.html#import"&gt;&lt;code class="xref std std-keyword docutils literal notranslate"&gt;&lt;span class="pre"&gt;import&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; mechanism for &lt;a class="reference internal" href="sys.html#sys.path" title="sys.path"&gt;&lt;code class="xref py py-data docutils literal notranslate"&gt;&lt;span class="pre"&gt;sys.path&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; items that are paths
to ZIP archives.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</zipimport>

<pkgutil rdf:about="#pkgutil1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides utilities for the import system, in particular package
support.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</pkgutil>

<modulefinder rdf:about="#modulefinder1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides a &lt;a class="reference internal" href="#modulefinder.ModuleFinder" title="modulefinder.ModuleFinder"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;ModuleFinder&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class that can be used to determine
the set of modules imported by a script. &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;modulefinder.py&lt;/span&gt;&lt;/code&gt; can also be run as
a script, giving the filename of a Python script as its argument, after which a
report of the imported modules will be printed.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</modulefinder>

<runpy rdf:about="#runpy1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-runpy" title="runpy: Locate and run Python modules without importing them first."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;runpy&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module is used to locate and run Python modules without
importing them first. Its main use is to implement the &lt;a class="reference internal" href="../using/cmdline.html#cmdoption-m"&gt;&lt;code class="xref std std-option docutils literal notranslate"&gt;&lt;span class="pre"&gt;-m&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; command
line switch that allows scripts to be located using the Python module
namespace rather than the filesystem.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</runpy>

<importlib rdf:about="#importlib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</importlib>

<importlibresources__Resource rdf:about="#importlibresources__resource1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module leverages Python’s import system to provide access to &lt;em&gt;resources&lt;/em&gt;
within &lt;em&gt;packages&lt;/em&gt;.  If you can import a package, you can access resources
within that package.  Resources can be opened or read, in either binary or
text mode.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</importlibresources__Resource>

<Deprecated_function rdf:about="#deprecated_function1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module leverages Python’s import system to provide access to &lt;em&gt;resources&lt;/em&gt;
within &lt;em&gt;packages&lt;/em&gt;.  If you can import a package, you can access resources
within that package.  Resources can be opened or read, in either binary or
text mode.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</Deprecated_function>

<importlibresourcesabc__Abstract_base_classes_for_resource rdf:about="#importlibresourcesabc__abstract_base_classes_for_resource1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</importlibresourcesabc__Abstract_base_classes_for_resource>

<Using_importlibmetadat rdf:about="#using_importlibmetadat1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</Using_importlibmetadat>

<The_initialization_of_the_syspath_module_search_pat rdf:about="#the_initialization_of_the_syspath_module_search_pat1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</The_initialization_of_the_syspath_module_search_pat>

<ast rdf:about="#ast1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-ast" title="ast: Abstract Syntax Tree classes and manipulation."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;ast&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module helps Python applications to process trees of the Python
abstract syntax grammar.  The abstract syntax itself might change with each
Python release; this module helps to find out programmatically what the current
grammar looks like.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</ast>

<symtable rdf:about="#symtable1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;Symbol tables are generated by the compiler from AST just before bytecode is
generated.  The symbol table is responsible for calculating the scope of every
identifier in the code.  &lt;a class="reference internal" href="#module-symtable" title="symtable: Interface to the compiler's internal symbol tables."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;symtable&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; provides an interface to examine these
tables.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</symtable>

<token rdf:about="#token1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides constants which represent the numeric values of leaf nodes
of the parse tree (terminal tokens).  Refer to the file &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;Grammar/Tokens&lt;/span&gt;&lt;/code&gt;
in the Python distribution for the definitions of the names in the context of
the language grammar.  The specific numeric values which the names map to may
change between Python versions.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</token>

<keyword rdf:about="#keyword1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module allows a Python program to determine if a string is a
&lt;a class="reference internal" href="../reference/lexical_analysis.html#keywords"&gt;&lt;span class="std std-ref"&gt;keyword&lt;/span&gt;&lt;/a&gt; or &lt;a class="reference internal" href="../reference/lexical_analysis.html#soft-keywords"&gt;&lt;span class="std std-ref"&gt;soft keyword&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</keyword>

<tokenize rdf:about="#tokenize1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-tokenize" title="tokenize: Lexical scanner for Python source code."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tokenize&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a lexical scanner for Python source code,
implemented in Python.  The scanner in this module returns comments as tokens
as well, making it useful for implementing “pretty-printers”, including
colorizers for on-screen displays.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tokenize>

<tabnanny rdf:about="#tabnanny1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;For the time being this module is intended to be called as a script. However it
is possible to import it into an IDE and use the function &lt;a class="reference internal" href="#tabnanny.check" title="tabnanny.check"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;check()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
described below.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tabnanny>

<pyclbr rdf:about="#pyclbr1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-pyclbr" title="pyclbr: Supports information extraction for a Python module browser."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;pyclbr&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides limited information about the
functions, classes, and methods defined in a Python-coded module.  The
information is sufficient to implement a module browser.  The
information is extracted from the Python source code rather than by
importing the module, so this module is safe to use with untrusted code.
This restriction makes it impossible to use this module with modules not
implemented in Python, including all standard and optional extension
modules.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</pyclbr>

<py_compile rdf:about="#py_compile1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-py_compile" title="py_compile: Generate byte-code files from Python source files."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;py_compile&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a function to generate a byte-code file
from a source file, and another function used when the module source file is
invoked as a script.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</py_compile>

<compileall rdf:about="#compileall1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides some utility functions to support installing Python
libraries.  These functions compile Python source files in a directory tree.
This module can be used to create the cached byte-code files at library
installation time, which makes them available for use even by users who don’t
have write permission to the library directories.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</compileall>

<dis rdf:about="#dis1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-dis" title="dis: Disassembler for Python bytecode."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;dis&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module supports the analysis of CPython &lt;a class="reference internal" href="../glossary.html#term-bytecode"&gt;&lt;span class="xref std std-term"&gt;bytecode&lt;/span&gt;&lt;/a&gt; by
disassembling it. The CPython bytecode which this module takes as an input is
defined in the file &lt;code class="file docutils literal notranslate"&gt;&lt;span class="pre"&gt;Include/opcode.h&lt;/span&gt;&lt;/code&gt; and used by the compiler and the
interpreter.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</dis>

<pickletools rdf:about="#pickletools1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module contains various constants relating to the intimate details of the
&lt;a class="reference internal" href="pickle.html#module-pickle" title="pickle: Convert Python objects to streams of bytes and back."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;pickle&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module, some lengthy comments about the implementation, and a
few useful functions for analyzing pickled data.  The contents of this module
are useful for Python core developers who are working on the &lt;a class="reference internal" href="pickle.html#module-pickle" title="pickle: Convert Python objects to streams of bytes and back."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;pickle&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;;
ordinary users of the &lt;a class="reference internal" href="pickle.html#module-pickle" title="pickle: Convert Python objects to streams of bytes and back."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;pickle&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module probably won’t find the
&lt;a class="reference internal" href="#module-pickletools" title="pickletools: Contains extensive comments about the pickle protocols and pickle-machine opcodes, as well as some useful functions."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;pickletools&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module relevant.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</pickletools>

<msvcrt rdf:about="#msvcrt1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;These functions provide access to some useful capabilities on Windows platforms.
Some higher-level modules use these functions to build the  Windows
implementations of their services.  For example, the &lt;a class="reference internal" href="getpass.html#module-getpass" title="getpass: Portable reading of passwords and retrieval of the userid."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;getpass&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module uses
this in the implementation of the &lt;a class="reference internal" href="getpass.html#module-getpass" title="getpass: Portable reading of passwords and retrieval of the userid."&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;getpass()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; function.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</msvcrt>

<winreg rdf:about="#winreg1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;These functions expose the Windows registry API to Python.  Instead of using an
integer as the registry handle, a &lt;a class="reference internal" href="#handle-object"&gt;&lt;span class="std std-ref"&gt;handle object&lt;/span&gt;&lt;/a&gt; is used
to ensure that the handles are closed correctly, even if the programmer neglects
to explicitly close them.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</winreg>

<winsound rdf:about="#winsound1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-winsound" title="winsound: Access to the sound-playing machinery for Windows. (Windows)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;winsound&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides access to the basic sound-playing machinery
provided by Windows platforms.  It includes functions and several constants.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</winsound>

<posix rdf:about="#posix1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides access to operating system functionality that is
standardized by the C Standard and the POSIX standard (a thinly disguised Unix
interface).&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</posix>

<pwd rdf:about="#pwd1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides access to the Unix user account and password database.  It
is available on all Unix versions.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</pwd>

<grp rdf:about="#grp1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides access to the Unix group database. It is available on all
Unix versions.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</grp>

<termios rdf:about="#termios1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides an interface to the POSIX calls for tty I/O control. For a
complete description of these calls, see &lt;em class="manpage"&gt;&lt;a class="manpage reference external" href="https://manpages.debian.org/termios(3)"&gt;termios(3)&lt;/a&gt;&lt;/em&gt; Unix manual
page.  It is only available for those Unix versions that support POSIX
&lt;em&gt;termios&lt;/em&gt; style tty I/O control configured during installation.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</termios>

<tty rdf:about="#tty1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-tty" title="tty: Utility functions that perform common terminal control operations. (Unix)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;tty&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines functions for putting the tty into cbreak and raw
modes.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</tty>

<pty rdf:about="#pty1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-pty" title="pty: Pseudo-Terminal Handling for Unix. (Unix)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;pty&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines operations for handling the pseudo-terminal
concept: starting another process and being able to write to and read from its
controlling terminal programmatically.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</pty>

<fcntl rdf:about="#fcntl1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module performs file control and I/O control on file descriptors. It is an
interface to the &lt;code class="xref c c-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;fcntl()&lt;/span&gt;&lt;/code&gt; and &lt;code class="xref c c-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;ioctl()&lt;/span&gt;&lt;/code&gt; Unix routines.  For a
complete description of these calls, see &lt;em class="manpage"&gt;&lt;a class="manpage reference external" href="https://manpages.debian.org/fcntl(2)"&gt;fcntl(2)&lt;/a&gt;&lt;/em&gt; and
&lt;em class="manpage"&gt;&lt;a class="manpage reference external" href="https://manpages.debian.org/ioctl(2)"&gt;ioctl(2)&lt;/a&gt;&lt;/em&gt; Unix manual pages.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</fcntl>

<resource rdf:about="#resource1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides basic mechanisms for measuring and controlling system
resources utilized by a program.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</resource>

<syslog rdf:about="#syslog1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides an interface to the Unix &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;syslog&lt;/span&gt;&lt;/code&gt; library routines.
Refer to the Unix manual pages for a detailed description of the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;syslog&lt;/span&gt;&lt;/code&gt;
facility.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</syslog>

<aifc rdf:about="#aifc1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides support for reading and writing AIFF and AIFF-C files.
AIFF is Audio Interchange File Format, a format for storing digital audio
samples in a file.  AIFF-C is a newer version of the format that includes the
ability to compress the audio data.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</aifc>

<asynchat rdf:about="#asynchat1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module builds on the &lt;a class="reference internal" href="asyncore.html#module-asyncore" title="asyncore: A base class for developing asynchronous socket handling services. (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;asyncore&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; infrastructure, simplifying
asynchronous clients and servers and making it easier to handle protocols
whose elements are terminated by arbitrary strings, or are of variable length.
&lt;a class="reference internal" href="#module-asynchat" title="asynchat: Support for asynchronous command/response protocols. (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;asynchat&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; defines the abstract class &lt;a class="reference internal" href="#asynchat.async_chat" title="asynchat.async_chat"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;async_chat&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; that you
subclass, providing implementations of the &lt;code class="xref py py-meth docutils literal notranslate"&gt;&lt;span class="pre"&gt;collect_incoming_data()&lt;/span&gt;&lt;/code&gt; and
&lt;code class="xref py py-meth docutils literal notranslate"&gt;&lt;span class="pre"&gt;found_terminator()&lt;/span&gt;&lt;/code&gt; methods. It uses the same asynchronous loop as
&lt;a class="reference internal" href="asyncore.html#module-asyncore" title="asyncore: A base class for developing asynchronous socket handling services. (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;asyncore&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, and the two types of channel, &lt;a class="reference internal" href="asyncore.html#asyncore.dispatcher" title="asyncore.dispatcher"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;asyncore.dispatcher&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
and &lt;a class="reference internal" href="#asynchat.async_chat" title="asynchat.async_chat"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;asynchat.async_chat&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, can freely be mixed in the channel map.
Typically an &lt;a class="reference internal" href="asyncore.html#asyncore.dispatcher" title="asyncore.dispatcher"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;asyncore.dispatcher&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; server channel generates new
&lt;a class="reference internal" href="#asynchat.async_chat" title="asynchat.async_chat"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;asynchat.async_chat&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; channel objects as it receives incoming
connection requests.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</asynchat>

<asyncore rdf:about="#asyncore1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides the basic infrastructure for writing asynchronous  socket
service clients and servers.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</asyncore>

<audioop rdf:about="#audioop1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-audioop" title="audioop: Manipulate raw audio data. (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;audioop&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module contains some useful operations on sound fragments.
It operates on sound fragments consisting of signed integer samples 8, 16, 24
or 32 bits wide, stored in &lt;a class="reference internal" href="../glossary.html#term-bytes-like-object"&gt;&lt;span class="xref std std-term"&gt;bytes-like objects&lt;/span&gt;&lt;/a&gt;.  All scalar items are
integers, unless specified otherwise.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</audioop>

<cgi rdf:about="#cgi1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;Support module for Common Gateway Interface (CGI) scripts.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</cgi>

<cgitb rdf:about="#cgitb1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-cgitb" title="cgitb: Configurable traceback handler for CGI scripts. (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;cgitb&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a special exception handler for Python scripts.
(Its name is a bit misleading.  It was originally designed to display extensive
traceback information in HTML for CGI scripts.  It was later generalized to also
display this information in plain text.)  After this module is activated, if an
uncaught exception occurs, a detailed, formatted report will be displayed.  The
report includes a traceback showing excerpts of the source code for each level,
as well as the values of the arguments and local variables to currently running
functions, to help you debug the problem.  Optionally, you can save this
information to a file instead of sending it to the browser.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</cgitb>

<chunk rdf:about="#chunk1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides an interface for reading files that use EA IFF 85 chunks.
&lt;a class="footnote-reference brackets" href="#id2" id="id1"&gt;1&lt;/a&gt;  This format is used in at least the Audio Interchange File Format
(AIFF/AIFF-C) and the Real Media File Format (RMFF).  The WAVE audio file format
is closely related and can also be read using this module.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</chunk>

<crypt rdf:about="#crypt1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module implements an interface to the &lt;em class="manpage"&gt;&lt;a class="manpage reference external" href="https://manpages.debian.org/crypt(3)"&gt;crypt(3)&lt;/a&gt;&lt;/em&gt; routine, which is
a one-way hash function based upon a modified DES algorithm; see the Unix man
page for further details.  Possible uses include storing hashed passwords
so you can check passwords without storing the actual password, or attempting
to crack Unix passwords with a dictionary.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</crypt>

<imghdr rdf:about="#imghdr1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-imghdr" title="imghdr: Determine the type of image contained in a file or byte stream. (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;imghdr&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module determines the type of image contained in a file or
byte stream.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</imghdr>

<imp rdf:about="#imp1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides an interface to the mechanisms used to implement the
&lt;a class="reference internal" href="../reference/simple_stmts.html#import"&gt;&lt;code class="xref std std-keyword docutils literal notranslate"&gt;&lt;span class="pre"&gt;import&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; statement.  It defines the following constants and functions:&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</imp>

<mailcap rdf:about="#mailcap1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;Mailcap files are used to configure how MIME-aware applications such as mail
readers and web browsers react to files with different MIME types. (The name
“mailcap” is derived from the phrase “mail capability”.)  For example, a mailcap
file might contain a line like &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;video/mpeg;&lt;/span&gt; &lt;span class="pre"&gt;xmpeg&lt;/span&gt; &lt;span class="pre"&gt;%s&lt;/span&gt;&lt;/code&gt;.  Then, if the user
encounters an email message or web document with the MIME type
&lt;em class="mimetype"&gt;video/mpeg&lt;/em&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;%s&lt;/span&gt;&lt;/code&gt; will be replaced by a filename (usually one
belonging to a temporary file) and the &lt;strong class="program"&gt;xmpeg&lt;/strong&gt; program can be
automatically started to view the file.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</mailcap>

<msilib rdf:about="#msilib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-msilib" title="msilib: Creation of Microsoft Installer files, and CAB files. (deprecated) (Windows)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;msilib&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; supports the creation of Microsoft Installer (&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.msi&lt;/span&gt;&lt;/code&gt;) files.
Because these files often contain an embedded “cabinet” file (&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.cab&lt;/span&gt;&lt;/code&gt;), it also
exposes an API to create CAB files. Support for reading &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.cab&lt;/span&gt;&lt;/code&gt; files is
currently not implemented; read support for the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.msi&lt;/span&gt;&lt;/code&gt; database is possible.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</msilib>

<nis rdf:about="#nis1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-nis" title="nis: Interface to Sun's NIS (Yellow Pages) library. (deprecated) (Unix)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;nis&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module gives a thin wrapper around the NIS library, useful for
central administration of several hosts.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</nis>

<nntplib rdf:about="#nntplib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module defines the class &lt;a class="reference internal" href="#nntplib.NNTP" title="nntplib.NNTP"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;NNTP&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; which implements the client side of
the Network News Transfer Protocol.  It can be used to implement a news reader
or poster, or automated news processors.  It is compatible with &lt;span class="target" id="index-2"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc3977.html"&gt;&lt;strong&gt;RFC 3977&lt;/strong&gt;&lt;/a&gt;
as well as the older &lt;span class="target" id="index-3"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc977.html"&gt;&lt;strong&gt;RFC 977&lt;/strong&gt;&lt;/a&gt; and &lt;span class="target" id="index-4"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2980.html"&gt;&lt;strong&gt;RFC 2980&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</nntplib>

<optparse rdf:about="#optparse1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;&lt;a class="reference internal" href="#module-optparse" title="optparse: Command-line option parsing library. (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;optparse&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is a more convenient, flexible, and powerful library for parsing
command-line options than the old &lt;a class="reference internal" href="getopt.html#module-getopt" title="getopt: Portable parser for command line options; support both short and long option names."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;getopt&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module.  &lt;a class="reference internal" href="#module-optparse" title="optparse: Command-line option parsing library. (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;optparse&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; uses a
more declarative style of command-line parsing: you create an instance of
&lt;a class="reference internal" href="#optparse.OptionParser" title="optparse.OptionParser"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;OptionParser&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, populate it with options, and parse the command
line. &lt;a class="reference internal" href="#module-optparse" title="optparse: Command-line option parsing library. (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;optparse&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; allows users to specify options in the conventional
GNU/POSIX syntax, and additionally generates usage and help messages for you.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</optparse>

<ossaudiodev rdf:about="#ossaudiodev1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module allows you to access the OSS (Open Sound System) audio interface.
OSS is available for a wide range of open-source and commercial Unices, and is
the standard audio interface for Linux and recent versions of FreeBSD.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</ossaudiodev>

<pipes rdf:about="#pipes1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-pipes" title="pipes: A Python interface to Unix shell pipelines. (deprecated) (Unix)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;pipes&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module defines a class to abstract the concept of a &lt;em&gt;pipeline&lt;/em&gt;
— a sequence of converters from one file to  another.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</pipes>

<smtpd rdf:about="#smtpd1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module offers several classes to implement SMTP (email) servers.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</smtpd>

<sndhdr rdf:about="#sndhdr1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-sndhdr" title="sndhdr: Determine type of a sound file. (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;sndhdr&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; provides utility functions which attempt to determine the type
of sound data which is in a file.  When these functions are able to determine
what type of sound data is stored in a file, they return a
&lt;a class="reference internal" href="collections.html#collections.namedtuple" title="collections.namedtuple"&gt;&lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;namedtuple()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, containing five attributes: (&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;filetype&lt;/span&gt;&lt;/code&gt;,
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;framerate&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;nchannels&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;nframes&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;sampwidth&lt;/span&gt;&lt;/code&gt;). The value for &lt;em&gt;type&lt;/em&gt;
indicates the data type and will be one of the strings &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'aifc'&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'aiff'&lt;/span&gt;&lt;/code&gt;,
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'au'&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'hcom'&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'sndr'&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'sndt'&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'voc'&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'wav'&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'8svx'&lt;/span&gt;&lt;/code&gt;,
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'sb'&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'ub'&lt;/span&gt;&lt;/code&gt;, or &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'ul'&lt;/span&gt;&lt;/code&gt;.  The &lt;em&gt;sampling_rate&lt;/em&gt; will be either the actual
value or &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;0&lt;/span&gt;&lt;/code&gt; if unknown or difficult to decode.  Similarly, &lt;em&gt;channels&lt;/em&gt; will be
either the number of channels or &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;0&lt;/span&gt;&lt;/code&gt; if it cannot be determined or if the
value is difficult to decode.  The value for &lt;em&gt;frames&lt;/em&gt; will be either the number
of frames or &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;-1&lt;/span&gt;&lt;/code&gt;.  The last item in the tuple, &lt;em&gt;bits_per_sample&lt;/em&gt;, will either
be the sample size in bits or &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'A'&lt;/span&gt;&lt;/code&gt; for A-LAW or &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'U'&lt;/span&gt;&lt;/code&gt; for u-LAW.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</sndhdr>

<spwd rdf:about="#spwd1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module provides access to the Unix shadow password database. It is
available on various Unix versions.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</spwd>

<sunau rdf:about="#sunau1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-sunau" title="sunau: Provide an interface to the Sun AU sound format. (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;sunau&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a convenient interface to the Sun AU sound
format.  Note that this module is interface-compatible with the modules
&lt;a class="reference internal" href="aifc.html#module-aifc" title="aifc: Read and write audio files in AIFF or AIFC format. (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;aifc&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a class="reference internal" href="wave.html#module-wave" title="wave: Provide an interface to the WAV sound format."&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;wave&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</sunau>

<telnetlib rdf:about="#telnetlib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-telnetlib" title="telnetlib: Telnet client class. (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;telnetlib&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a &lt;a class="reference internal" href="#telnetlib.Telnet" title="telnetlib.Telnet"&gt;&lt;code class="xref py py-class docutils literal notranslate"&gt;&lt;span class="pre"&gt;Telnet&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; class that implements the
Telnet protocol.  See &lt;span class="target" id="index-2"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc854.html"&gt;&lt;strong&gt;RFC 854&lt;/strong&gt;&lt;/a&gt; for details about the protocol. In addition, it
provides symbolic constants for the protocol characters (see below), and for the
telnet options. The symbolic names of the telnet options follow the definitions
in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;arpa/telnet.h&lt;/span&gt;&lt;/code&gt;, with the leading &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TELOPT_&lt;/span&gt;&lt;/code&gt; removed. For symbolic names
of options which are traditionally not included in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;arpa/telnet.h&lt;/span&gt;&lt;/code&gt;, see the
module source itself.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</telnetlib>

<uu rdf:about="#uu1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;This module encodes and decodes files in uuencode format, allowing arbitrary
binary data to be transferred over ASCII-only connections. Wherever a file
argument is expected, the methods accept a file-like object.  For backwards
compatibility, a string containing a pathname is also accepted, and the
corresponding file will be opened for reading and writing; the pathname &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'-'&lt;/span&gt;&lt;/code&gt;
is understood to mean the standard input or output.  However, this interface is
deprecated; it’s better for the caller to open the file itself, and be sure
that, when required, the mode is &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'rb'&lt;/span&gt;&lt;/code&gt; or &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;'wb'&lt;/span&gt;&lt;/code&gt; on Windows.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</uu>

<xdrlib rdf:about="#xdrlib1">
  <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"/>
  <SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#string">&lt;p&gt;The &lt;a class="reference internal" href="#module-xdrlib" title="xdrlib: Encoders and decoders for the External Data Representation (XDR). (deprecated)"&gt;&lt;code class="xref py py-mod docutils literal notranslate"&gt;&lt;span class="pre"&gt;xdrlib&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module supports the External Data Representation Standard as
described in &lt;span class="target" id="index-2"&gt;&lt;/span&gt;&lt;a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc1014.html"&gt;&lt;strong&gt;RFC 1014&lt;/strong&gt;&lt;/a&gt;, written by Sun Microsystems, Inc. June 1987.  It
supports most of the data types described in the RFC.&lt;/p&gt;</SpecText>
  <has_SpecText rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</has_SpecText>
</xdrlib>


</rdf:RDF>
