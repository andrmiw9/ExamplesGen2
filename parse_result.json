{
    "Python_Basics": {
        "Python_Datatypes": {
            "Python_int": "x = 20\ny = 45\n\nprint(x)\nprint(y)",
            "Python_float": "x = 20.85669842\ny = -0.0000000008566945\nprint(x)\nprint(y)",
            "Python_complex": "cn = complex(5,6)\nprint(cn)\n\ncn = 5 + 6j\nprint(cn)",
            "Python_bytes": "bytesObj = b'52s3a6'\n\nfor byte in bytesObj:\n    print(byte)",
            "Python_string": "greeting = 'hello world!'\nprint(type(greeting))"
        },
        "Console_Operations": {
            "Python__Print_to_Console_Output": "print('Hello World')",
            "Python__Read_String_from_Console": "#read string from user\nfirstName = input('Enter your first name: ')\n\nprint('Hello',firstName)",
            "Python__Read_Number_from_Console": "# Read integers from user\nn1 = int(input('Enter a number: '))\nn2 = int(input('Enter another number: '))\n\nprint('The sum of two numbers is:', n1+n2)"
        },
        "Conditional_Statements": {
            "Python_If_Example": "a = 2\nb = 5\n\nif a<b:\n    print(a, 'is less than', b)",
            "Python_If_Else_Example": "a = 2\nb = 4\n\nif a<b:\n    print(a, 'is less than', b)\nelse:\n    print(a, 'is not less than', b)",
            "Python_Elif_Example": "a = 6\nb = 4\n\nif a<b:\n    print(a, 'is less than', b)\nelif a>b:\n    print(a, 'is greater than', b)\nelse:\n    print(a, 'equals', b)",
            "Python_if_and": "a = 5\nb = 2\n\n#nested if\nif a==5:\n     if b>0:\n          print('a is 5 and',b,'is greater than zero.')\n          \n#or you can combine the conditions as\nif a==5 and b>0:\n     print('a is 5 and',b,'is greater than zero.')",
            "Python_if_or": "today = 'Saturday'\n\nif today=='Sunday' or today=='Saturday':\n     print('Today is off. Rest at home.')",
            "Python_if_not": "a = False\n\nif not a:\n     print('a is false.')"
        },
        "Python_Looping_Statements": {
            "Python_For_Loop": "for i in range(25,29):\n     print(i)",
            "Python_for_i_in_range": "for i in range(5):\n    print(i)",
            "Python_Range": "for r in range(5):\n    print(r)",
            "Python_While_Loop": "n = 4\ni = 1\nwhile i <= n:\n     print(i)\n     i+=1"
        },
        "Python_Enumeration": {
            "Python_Enum_Example": "myList = ['apple', 'banana', 'cherry']\n\nfor index, item in enumerate(myList):\n    print(index, item)"
        },
        "Python_Type_Conversion": {
            "Python_Convert_Int_to_Float": "#take an integer\na = 5\nprint('Intput', a, type(a), sep='\\n')\n\n#convert integer to float\noutput = float(a)\nprint('\\nOutput', output, type(output), sep='\\n')",
            "Python_Convert_Int_to_Complex_Number": "https://pythonexamples.org/python-convert-int-to-complex/",
            "Python_Convert_Int_to_String": "#take an int\na = 5\nprint('Input', a, type(a), sep='\\n')\n\n#convert int to string\noutput = str(a)\nprint('\\nOutput', output, type(output), sep='\\n')",
            "Python_Convert_Bytes_to_String": "bytesObj = b'52s3a6'\nstring = bytesObj.decode('utf-8')\nprint(string)",
            "Python_Convert_String_to_Int": "#take a string\na = '125'\nprint('Input', a, type(a), sep='\\n')\n\n#convert string to int\noutput = int(a)\nprint('\\nOutput', output, type(output), sep='\\n')"
        },
        "Python_Keywords": {
            "Python_Pass_Statement": "https://pythonexamples.org/python-pass/",
            "Check_if_the_given_String_is_a_Python_Keyword": "import keyword\n\nif __name__ == '__main__':\n     #read string from user\n     s = input(\"Enter a string: \")\n     #check if the string is a keyword\n     iskey = keyword.iskeyword(s)\n     print('Is',s,'a keyword:',iskey)",
            "Get_the_list_of_all_Python_Keywords_programmatically": "import keyword\n\n# Get all keywords\nkeywords = keyword.kwlist\n\n# Pprint the keywords\nfor key in keywords:\n    print(key)"
        },
        "Python_Functions": {
            "Python__Inner_Functions": "def function():\n    print('Inside function.')\n\n    def innerFunction1():\n        print('Inner function 1.')\n\n    def innerFunction2():\n        print('Inner function 2.')\n\n    innerFunction1()\n    innerFunction2()\n\nfunction()",
            "Python__Return_Function_from_Function": "def function1():\n    return function2\n\ndef function2():\n    print('Function 2')\n\nx = function1()\nx()",
            "Python__Return_Tuple_from_Function": "def myFunction():\n    return (1, 'Ram')\n\ntuple1 = myFunction()\n\nprint(tuple1)\nprint(type(tuple1))",
            "Python__List_of_Functions": "def function1():\n    print('Function 1')\n\ndef function2():\n    print('Function 2')\n\nmyList = [function1, function2]"
        },
        "Python_Advanced_Topics": {
            "Python__py_to_exe": "https://pythonexamples.org/python-py-to-exe/"
        }
    }
}